{
  "version": 3,
  "sources": [
    "../../main.139.js"
  ],
  "names": [
    "splashscreenElement",
    "document",
    "querySelector",
    "activateSplashscreenVariant",
    "variantId",
    "data",
    "activeVariantContainer",
    "innerHTML",
    "variantInstance",
    "cloneNode",
    "visitNode",
    "node",
    "nodeName",
    "textContent",
    "replace",
    "_",
    "key",
    "hasOwnProperty",
    "Array",
    "from",
    "childNodes",
    "forEach",
    "appendChild",
    "showLoaderTimeout",
    "setTimeout",
    "mainScript",
    "onerror",
    "clearTimeout",
    "errorEventCallback",
    "errorEvent",
    "window",
    "removeEventListener",
    "message",
    "filename",
    "lineno",
    "lineNumber",
    "colno",
    "columnNumber",
    "runtimeErrorTitle",
    "runtimeErrorMessage",
    "addEventListener",
    "splashscreen",
    "remove",
    "setAttribute",
    "style",
    "display"
  ],
  "mappings": "AACM,MAAMA,oBAAsBC,SAASC,cAAc,iBAE7CC,4BAA8B,CAACC,EAAWC,EAAO,MACrD,MAAMC,EAAyBL,SAASC,cAAc,sBACtDI,EAAuBC,UAAY,GACnC,MACMC,EADeP,SAASC,cAAc,IAAIE,KACXK,WAAU,GAEzCC,EAAaC,IACK,UAAlBA,EAAKC,SACPD,EAAKE,YAAcF,EAAKE,YAAYC,QAAQ,cAAc,CAACC,EAAGC,IACrDX,EAAKY,eAAeD,GAAOX,EAAKW,GAAO,KAGhDE,MAAMC,KAAKR,EAAKS,YAAYC,SAASV,IACnCD,EAAUC,OAOhB,OAHAD,EAAUF,GAEVF,EAAuBgB,YAAYd,GAC5BA,GAIHe,kBAAoBC,YAAW,KACnCrB,4BAA4B,YAC3B,MAGGsB,WAAaxB,SAASC,cAAc,sBAC1CuB,WAAWC,QAAU,KACnBC,aAAaJ,mBACbpB,4BAA4B,yBAM9B,MAAMyB,mBAAsBC,IAC1BC,OAAOC,oBAAoB,QAASH,oBACpC,MAAMI,QAAEA,EAAOC,SAAEA,EAAUC,OAAQC,EAAYC,MAAOC,GAAiBR,EAEvEF,aAAaJ,mBACbpB,4BAA4B,uBAAwB,CAClDmC,kBAAmBL,EACf,GAAGA,KAAYE,KAAcE,IAC7B,yCACJE,oBACEP,GACA,uFAINF,OAAOU,iBAAiB,QAASZ,oBAEjCE,OAAOW,aAAe,CACpBC,OAAQ,KASNf,aAAaJ,mBACbO,OAAOC,oBAAoB,QAASH,oBACpC5B,oBAAoB2C,aAAa,YAAa,UAC9CnB,YAAW,KACTxB,oBAAoB4C,MAAMC,QAAU,SACnC",
  "sourcesContent": [
    "\n      const splashscreenElement = document.querySelector(\"#splashscreen\")\n\n      const activateSplashscreenVariant = (variantId, data = {}) => {\n        const activeVariantContainer = document.querySelector(\"#splashscreen-text\")\n        activeVariantContainer.innerHTML = \"\"\n        const variantModel = document.querySelector(`#${variantId}`)\n        const variantInstance = variantModel.cloneNode(true)\n\n        const visitNode = (node) => {\n          if (node.nodeName === \"#text\") {\n            node.textContent = node.textContent.replace(/\\${(\\w*)}/g, (_, key) => {\n              return data.hasOwnProperty(key) ? data[key] : \"\"\n            })\n          } else {\n            Array.from(node.childNodes).forEach((node) => {\n              visitNode(node)\n            })\n          }\n        }\n        visitNode(variantInstance)\n\n        activeVariantContainer.appendChild(variantInstance)\n        return variantInstance\n      }\n\n      // montre un loader ou quelque chose parce que le site met un peu de temps a se load\n      const showLoaderTimeout = setTimeout(() => {\n        activateSplashscreenVariant(\"loader\")\n      }, 2500)\n\n      // detect main script load error\n      const mainScript = document.querySelector(\"script#main-script\")\n      mainScript.onerror = () => {\n        clearTimeout(showLoaderTimeout)\n        activateSplashscreenVariant(\"network-error-screen\")\n      }\n      // uncomment the line below to test the case of a network error\n      // mainScript.onerror();\n\n      // detect main script parse or execute error\n      const errorEventCallback = (errorEvent) => {\n        window.removeEventListener(\"error\", errorEventCallback)\n        const { message, filename, lineno: lineNumber, colno: columnNumber } = errorEvent\n\n        clearTimeout(showLoaderTimeout)\n        activateSplashscreenVariant(\"runtime-error-screen\", {\n          runtimeErrorTitle: filename\n            ? `${filename}:${lineNumber}:${columnNumber}`\n            : \"<Aucun fichier associé a cette erreur>\",\n          runtimeErrorMessage:\n            message ||\n            `<Aucun message associé a cette erreur>\n(Ouvrir les devtools pour en savoir plus)`,\n        })\n      }\n      window.addEventListener(\"error\", errorEventCallback)\n\n      window.splashscreen = {\n        remove: () => {\n          // uncomment the line below to test the case of an infite loading\n          // return\n\n          // here the main script should call this when it's ready to display something\n          // because the main script might be loading some images and stuff\n          // we should first display an other screen showing what the main script is doing\n          // (likely loading assets)\n          // we must create this component which does not exists yet\n          clearTimeout(showLoaderTimeout)\n          window.removeEventListener(\"error\", errorEventCallback)\n          splashscreenElement.setAttribute(\"data-step\", \"loaded\")\n          setTimeout(() => {\n            splashscreenElement.style.display = \"none\"\n          }, 300)\n        },\n      }\n    "
  ],
  "file": "main.139-d20a0d02.js"
}