{
  "version": 3,
  "sources": [
    "../../node_modules/@jsenv/core/helpers/babel/arrayWithHoles/arrayWithHoles.js",
    "../../node_modules/@jsenv/core/helpers/babel/iterableToArrayLimit/iterableToArrayLimit.js",
    "../../node_modules/@jsenv/core/helpers/babel/nonIterableRest/nonIterableRest.js",
    "../../node_modules/@jsenv/core/helpers/babel/slicedToArray/slicedToArray.js",
    "../../src/boot/boot.utils.js",
    "../../src/boot/boot.js"
  ],
  "names": [
    "Array",
    "_i",
    "arr",
    "Symbol",
    "_arr",
    "_n",
    "_d",
    "_s",
    "i",
    "_e",
    "arrayWithHoles",
    "iterableToArrayLimit",
    "unsupportedIterableToArray",
    "nonIterableRest",
    "injectCSS",
    "crossOrigin",
    "link",
    "document",
    "nextIDLEPromise",
    "timeout",
    "window",
    "Promise",
    "prepareApp",
    "import",
    "updateSplascreenText",
    "splashscreenMessageNode",
    "setTimeout",
    "loadApp",
    "app",
    "args",
    "arguments",
    "f",
    "then",
    "value",
    "_empty"
  ],
  "mappings": "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",
  "sourcesContent": [
    "// eslint-disable-next-line consistent-return\nexport default (arr) => {\n  if (Array.isArray(arr)) return arr\n}\n",
    "export default function _iterableToArrayLimit(arr, i) {\n  // this is an expanded form of \\`for...of\\` that properly supports abrupt completions of\n  // iterators etc. variable names have been minimised to reduce the size of this massive\n  // helper. sometimes spec compliance is annoying :(\n  //\n  // _n = _iteratorNormalCompletion\n  // _d = _didIteratorError\n  // _e = _iteratorError\n  // _i = _iterator\n  // _s = _step\n  var _i =\n    arr == null\n      ? null\n      : (typeof Symbol !== \"undefined\" && arr[Symbol.iterator]) || arr[\"@@iterator\"]\n  if (_i == null) return\n  var _arr = []\n  var _n = true\n  var _d = false\n  var _s, _e\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value)\n      if (i && _arr.length === i) break\n    }\n  } catch (err) {\n    _d = true\n    _e = err\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]()\n    } finally {\n      if (_d) throw _e\n    }\n  }\n  return _arr\n}\n",
    "export default () => {\n  throw new TypeError(\n    \"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\",\n  )\n}\n",
    "import arrayWithHoles from \"../arrayWithHoles/arrayWithHoles.js\"\nimport iterableToArrayLimit from \"../iterableToArrayLimit/iterableToArrayLimit.js\"\nimport unsupportedIterableToArray from \"../unsupportedIterableToArray/unsupportedIterableToArray.js\"\nimport nonIterableRest from \"../nonIterableRest/nonIterableRest.js\"\n\nexport default (arr, i) =>\n  arrayWithHoles(arr) ||\n  iterableToArrayLimit(arr, i) ||\n  unsupportedIterableToArray(arr, i) ||\n  nonIterableRest()\n",
    "export const injectCSS = (cssUrl, { crossOrigin } = {}) => {\n  return new Promise((resolve, reject) => {\n    const link = document.createElement(\"link\")\n    link.rel = \"stylesheet\"\n    link.onload = resolve\n    link.onerror = reject\n    link.href = cssUrl\n    link.crossOrigin = crossOrigin\n    document.head.appendChild(link)\n  })\n}\n\nexport const nextIDLEPromise = window.requestIdleCallback\n  ? ({ timeout = 60 } = {}) => {\n      return new Promise((resolve) => {\n        window.requestIdleCallback(resolve, { timeout })\n      })\n    }\n  : () => {\n      return new Promise((resolve) => {\n        window.requestAnimationFrame(resolve)\n      })\n    }\n",
    "/**\n * This is where you can orchestrate the loading of your application\n */\n\nimport { injectCSS, nextIDLEPromise } from \"./boot.utils.js\"\n\nconst prepareApp = async () => {\n  await injectCSS(new URL(\"./boot.css\", import.meta.url), { crossOrigin: true }).catch(() => {})\n  await document.fonts.ready\n  // window.splashscreen.takeOver() means this code is taking responsability of the splashscreen.\n  // It prevents main.html to display <div id=\"booting_is_slow\"></div> to the user\n  window.splashscreen.takeOver()\n\n  const updateSplascreenText = (message) => {\n    const splashscreenMessageNode = document.querySelector(\"#splashscreen_message\")\n    splashscreenMessageNode.innerHTML = message\n  }\n\n  updateSplascreenText(`Loading banana...`)\n  await new Promise((resolve) => {\n    setTimeout(resolve, 600)\n  })\n\n  updateSplascreenText(`Loading gorilla...`)\n  await new Promise((resolve) => {\n    setTimeout(resolve, 800)\n  })\n\n  updateSplascreenText(`Loading the entire jungle...`)\n  await new Promise((resolve) => {\n    setTimeout(resolve, 1200)\n  })\n}\n\nconst loadApp = () => {\n  return import(\"../app/app.js\")\n}\n\nconst [, app] = await Promise.all([prepareApp(), loadApp()])\n// app.render() can be very expensive so we wait a bit\n// to let navigator an opportunity to cooldown.\n// This should help to save battery power and RAM\nawait nextIDLEPromise()\napp.render()\nwindow.splashscreen.appIsReady()\n"
  ]
}