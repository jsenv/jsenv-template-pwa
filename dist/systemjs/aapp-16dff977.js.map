{
  "version": 3,
  "sources": [
    "../../node_modules/@jsenv/pwa/src/internal/listenEvent.js",
    "../../node_modules/@jsenv/pwa/src/listenAppInstalled.js",
    "../../node_modules/@jsenv/pwa/src/displayModeStandalone.js",
    "../../node_modules/@jsenv/pwa/src/add-to-home-screen.js",
    "../../node_modules/@jsenv/core/helpers/babel/arrayWithoutHoles/arrayWithoutHoles.js",
    "../../node_modules/@jsenv/core/helpers/babel/iterableToArray/iterableToArray.js",
    "../../node_modules/@jsenv/core/helpers/babel/nonIterableSpread/nonIterableSpread.js",
    "../../node_modules/@jsenv/core/helpers/babel/toConsumableArray/toConsumableArray.js",
    "../../node_modules/@jsenv/pwa/src/internal/createSignal.js",
    "../../node_modules/@jsenv/pwa/src/internal/sendMessageUsingChannel.js",
    "../../node_modules/@jsenv/pwa/src/navigatorController.js",
    "../../src/app/pwa/add_to_home_screen.js",
    "../../src/app/pwa/service_worker_registration.js",
    "../../src/app/pwa/service_worker_update.js",
    "../../src/app/greet.js",
    "../../src/app/app.js"
  ],
  "names": [
    "listenEvent",
    "objectWithEventEmitter",
    "listenAppInstalled",
    "window",
    "displayModeStandalone",
    "get",
    "listen",
    "media",
    "appInstalledEvent",
    "addToHomescreen",
    "isAvailable",
    "listenAvailabilityChange",
    "availablePrevious",
    "checkAvailabilityChange",
    "available",
    "callback",
    "removeBeforeInstallPromptListener",
    "listenBeforeInstallPrompt",
    "args",
    "i",
    "arguments",
    "removeDisplayModeListener",
    "Promise",
    "f",
    "removeAppInstalledListener",
    "then",
    "value",
    "prompt",
    "console",
    "choiceResult",
    "Array",
    "arrayLikeToArray",
    "iter",
    "Symbol",
    "arrayWithoutHoles",
    "iterableToArray",
    "unsupportedIterableToArray",
    "nonIterableSpread",
    "createSignal",
    "listeners",
    "once",
    "callbackOriginal",
    "stopListening",
    "removed",
    "listenersWithoutCallback",
    "searching",
    "listenerCandidate",
    "emit",
    "listener",
    "sendMessageUsingChannel",
    "port1",
    "port2",
    "event",
    "reject",
    "resolve",
    "objectWithPostMessage",
    "serviceWorkerAPI",
    "log",
    "canUseServiceWorker",
    "Boolean",
    "document",
    "registrationPromise",
    "serviceWorkerUpdating",
    "serviceWorkerUpdatingChangeSignal",
    "serviceWorkerUpdatingSetter",
    "worker",
    "registerServiceWorker",
    "scope",
    "unregistered",
    "unregister",
    "removeUpdateFoundListener",
    "registration",
    "installing",
    "active",
    "_await",
    "getServiceWorkerUpdate",
    "shouldBecomeNavigatorController",
    "navigatorWillReload",
    "autoReloadEnabled",
    "listenServiceWorkerUpdate",
    "checkServiceWorkerUpdate",
    "updateRegistration",
    "waiting",
    "sendMessageToServiceWorkerUpdate",
    "activateServiceWorkerUpdate",
    "sendSkipWaitingToWorker",
    "onActivating",
    "onActivated",
    "onBecomesNavigatorController",
    "state",
    "waitUntilActivated",
    "removeStateChangeListener",
    "action",
    "removeControllerChangeListener",
    "reload",
    "refreshing",
    "body",
    "result",
    "buttonAddToHomescreen",
    "callLater",
    "requestIdleCallback",
    "installServiceWorkerUpdateUI",
    "buttonCheckUpdate",
    "paragraph",
    "greet",
    "render",
    "import"
  ],
  "mappings": "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",
  "sourcesContent": [
    "export const listenEvent = (objectWithEventEmitter, event, callback) => {\n  objectWithEventEmitter.addEventListener(event, callback)\n  return () => {\n    objectWithEventEmitter.removeEventListener(event, callback)\n  }\n}\n",
    "/**\n * - User can decide by himself to install the application from the browser toolbar.\n * - Or application code is allowed to prompt user to do so on a user interaction such\n * as after clicking on a button.\n * In these scenarios when user clicks install on that prompt displayed by the browser,\n * browser dispatch an \"appinstalled\" event.\n */\n\nexport const listenAppInstalled = (callback) => {\n  window.addEventListener(\"appinstalled\", callback)\n  return () => {\n    window.removeEventListener(\"appinstalled\", callback)\n  }\n}\n\n// listenAppInstalled(() => {\n//   document.querySelector(\"#install\").disabled = true\n// })\n",
    "/**\n * displayModeStandalone can be used to know the current displayMode of\n * our web page is standalone (PWA)\n */\n\nexport const displayModeStandalone = {\n  get: () => window.navigator.standalone || window.matchMedia(\"(display-mode: standalone)\").matches,\n  listen: (callback) => {\n    const media = window.matchMedia(\"(display-mode: standalone)\")\n    media.addListener(callback)\n    return () => {\n      media.removeListener(callback)\n    }\n  },\n}\n",
    "/**\n  The following scenario is working:\n\n  - user click install button -> browser shows add to home screen prompt\n  - user click cancel on browser prompt\n  - user click again install button -> browser shows again add to home screen prompt\n\n  It's very easy to break this so that subsequent click does nothing.\n  Nothing means browser always returns a \"dimissed\" user choice without asking user.\n  I suspect chrome is trying to prevent malicious script to annoy user\n  by calling prompt() many times.\n\n  It's currently working because we don't hide beforeinstallpromptEvent behind a function.\n  It would be hidden behind a function if we put it into react state or\n  just by using a curried funciton like:\n\n  beforeinstallpromptEvent\n  const curriedFunction = () => {\n    beforeinstallpromptEvent.prompt()\n  }\n\n  If we do so, chrome will always dismiss subsequent click on install button. (until page is reloaded).\n  To avoid that we store the event on window.beforeinstallpromptEvent.\n*/\n\nimport { listenEvent } from \"./internal/listenEvent.js\"\nimport { listenAppInstalled } from \"./listenAppInstalled.js\"\nimport { displayModeStandalone } from \"./displayModeStandalone.js\"\n\nlet appInstalledEvent = false\n\nlistenAppInstalled(() => {\n  // prompt \"becomes\" unavailable if user installs app\n  // it can happen if user installs app manually from browser toolbar\n  // in that case there is no point showing the install\n  // button in the ui\n  appInstalledEvent = true\n})\n\nexport const addToHomescreen = {\n  isAvailable: () => {\n    if (!window.beforeinstallpromptEvent) {\n      return false\n    }\n\n    if (displayModeStandalone.get()) {\n      return false\n    }\n\n    if (appInstalledEvent) {\n      return false\n    }\n\n    return true\n  },\n\n  listenAvailabilityChange: (callback) => {\n    let availablePrevious = addToHomescreen.isAvailable()\n\n    const checkAvailabilityChange = () => {\n      const available = addToHomescreen.isAvailable()\n      if (available !== availablePrevious) {\n        availablePrevious = available\n        callback(available)\n      }\n    }\n\n    const removeBeforeInstallPromptListener = listenBeforeInstallPrompt(\n      (beforeinstallpromptEvent) => {\n        window.beforeinstallpromptEvent = beforeinstallpromptEvent\n        checkAvailabilityChange()\n      },\n    )\n\n    const removeDisplayModeListener = displayModeStandalone.listen(() => {\n      checkAvailabilityChange()\n    })\n\n    const removeAppInstalledListener = listenAppInstalled(() => {\n      // prompt \"becomes\" unavailable if user installs app\n      // it can happen if user installs app manually from browser toolbar\n      // in that case there is no point showing the install\n      // button in the ui\n      appInstalledEvent = true\n      checkAvailabilityChange()\n    })\n\n    return () => {\n      removeBeforeInstallPromptListener()\n      removeDisplayModeListener()\n      removeAppInstalledListener()\n    }\n  },\n\n  prompt: async () => {\n    if (!window.beforeinstallpromptEvent) {\n      console.warn(`cannot prompt add to home screen: window.beforeinstallpromptEvent is missing`)\n      return false\n    }\n\n    window.beforeinstallpromptEvent.prompt()\n    const choiceResult = await window.beforeinstallpromptEvent.userChoice\n    if (choiceResult.outcome === \"accepted\") {\n      return true\n    }\n    return false\n  },\n}\n\nconst listenBeforeInstallPrompt = (callback) => listenEvent(window, \"beforeinstallprompt\", callback)\n",
    "import arrayLikeToArray from \"../arrayLikeToArray/arrayLikeToArray.js\"\n\n// eslint-disable-next-line consistent-return\nexport default (arr) => {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr)\n}\n",
    "export default function _iterableToArray(iter) {\n  if (\n    (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null) ||\n    iter[\"@@iterator\"] != null\n  )\n    return Array.from(iter)\n}\n",
    "export default () => {\n  throw new TypeError(\n    \"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\",\n  )\n}\n",
    "import arrayWithoutHoles from \"../arrayWithoutHoles/arrayWithoutHoles.js\"\nimport iterableToArray from \"../iterableToArray/iterableToArray.js\"\nimport unsupportedIterableToArray from \"../unsupportedIterableToArray/unsupportedIterableToArray.js\"\nimport nonIterableSpread from \"../nonIterableSpread/nonIterableSpread.js\"\n\nexport default (arr) =>\n  arrayWithoutHoles(arr) ||\n  iterableToArray(arr) ||\n  unsupportedIterableToArray(arr) ||\n  nonIterableSpread()\n",
    "export const createSignal = () => {\n  let listeners = []\n\n  const listen = (callback, { once = false } = {}) => {\n    if (once) {\n      const callbackOriginal = callback\n      callback = (...args) => {\n        stopListening()\n        callbackOriginal(...args)\n      }\n    }\n\n    listeners = [...listeners, callback]\n\n    let removed = false\n    const stopListening = () => {\n      if (removed) return\n      removed = true\n      const listenersWithoutCallback = []\n      let i = listeners.length\n      let searching = true\n      while (i--) {\n        const listenerCandidate = listeners[i]\n        if (searching) {\n          if (listenerCandidate === callback) {\n            searching = false\n          } else {\n            listenersWithoutCallback.push(listenerCandidate)\n          }\n        } else {\n          listenersWithoutCallback.push(listenerCandidate)\n        }\n      }\n      listeners = listenersWithoutCallback\n    }\n    return stopListening\n  }\n\n  const emit = (...args) => {\n    listeners.forEach((listener) => {\n      listener(...args)\n    })\n  }\n\n  return {\n    listen,\n    emit,\n  }\n}\n",
    "// https://felixgerschau.com/how-to-communicate-with-service-workers/\nexport const sendMessageUsingChannel = (objectWithPostMessage, message) => {\n  const { port1, port2 } = new MessageChannel()\n  return new Promise((resolve, reject) => {\n    port1.onmessage = function (event) {\n      if (event.data.status === \"rejected\") {\n        reject(event.data.value)\n      } else {\n        resolve(event.data.value)\n      }\n    }\n    objectWithPostMessage.postMessage(message, [port2])\n  })\n}\n",
    "// do not forget error handling: https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/onerror\n\nimport { createSignal } from \"./internal/createSignal.js\"\nimport { listenEvent } from \"./internal/listenEvent.js\"\nimport { sendMessageUsingChannel } from \"./internal/sendMessageUsingChannel.js\"\n\nconst serviceWorkerAPI = window.navigator.serviceWorker\nlet logEnabled = false\nconst log = (...args) => {\n  if (logEnabled) {\n    console.log(...args)\n  }\n}\n\nexport const enableServiceWorkerLogs = () => {\n  logEnabled = true\n}\n\nexport const canUseServiceWorker =\n  Boolean(serviceWorkerAPI) && document.location.protocol === \"https:\"\n\n// https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration\nlet registrationPromise = null\nlet serviceWorker = null\nconst serviceWorkerSetter = (worker) => {\n  serviceWorker = worker\n}\n\nlet serviceWorkerUpdating = null\nconst serviceWorkerUpdatingChangeSignal = createSignal()\nconst serviceWorkerUpdatingSetter = (worker) => {\n  if (serviceWorkerUpdating && serviceWorkerUpdating === worker) {\n    // we already know about this worker, no need to listen state changes.\n    // it happens for manual updates where we bot detect it\n    // from registration.update() return value\n    // and \"updatefound\" event\n    log(\"we already know this worker is updating\")\n    return\n  }\n  if (worker) {\n    log(`found a worker updating (worker state is: ${worker.state})`)\n  } else {\n    log(`worker update is done`)\n  }\n  serviceWorkerUpdating = worker\n  serviceWorkerUpdatingChangeSignal.emit()\n}\n\nexport const serviceWorkerIsAvailable = () => Boolean(registrationPromise)\n\nexport const registerServiceWorker = (url, { scope } = {}) => {\n  if (!canUseServiceWorker) {\n    return () => {}\n  }\n\n  let unregistered = false\n  let unregister = () => {}\n  let removeUpdateFoundListener = () => {}\n\n  registrationPromise = serviceWorkerAPI.register(url, { scope })\n  ;(async () => {\n    const registration = await registrationPromise\n    unregister = () => {\n      registration.unregister()\n    }\n\n    if (unregistered) {\n      unregister()\n      return\n    }\n\n    const { installing, waiting, active } = registration\n    serviceWorkerSetter(installing || waiting || active)\n    removeUpdateFoundListener = listenEvent(registration, \"updatefound\", () => {\n      log(\"browser notifies use an worker is installing\")\n      if (registration.installing === installing) {\n        log(`it's not an worker update, it's first time worker registers`)\n        return\n      }\n      serviceWorkerUpdatingSetter(registration.installing)\n    })\n  })()\n\n  return () => {\n    unregistered = true\n    removeUpdateFoundListener()\n    unregister()\n  }\n}\n\n// export const getServiceWorkerState = () => {\n//   if (serviceWorker) {\n//     return serviceWorker.state\n//   }\n//   return null\n// }\n\n// export const listenServiceWorkerState = (callback) => {\n//   let removeStateChangeListener = () => {}\n//   const removeWorkerChangeListener = serviceWorkerChangeSignal.listen(() => {\n//     callback()\n//     removeStateChangeListener = listenEvent(serviceWorker, \"statechange\", callback)\n//   })\n//   return () => {\n//     removeWorkerChangeListener()\n//     removeStateChangeListener()\n//   }\n// }\n\n// For now this function will try to communicate with the old service worker\n// even if new worker is activating or activated.\n// It might not work because, from what I understood, the old worker gets killed\n// by the navigator as soon as the new worker starts to activate.\n// Maybe it should communicate with the new worker as soon as we know\n// updating worker is activating or activated.\n// -> yes\nexport const sendMessageToServiceWorker = (message) => {\n  if (!serviceWorker) {\n    console.warn(`no service worker to send message to`)\n    return undefined\n  }\n  return sendMessageUsingChannel(serviceWorker, message)\n}\n\nexport const getServiceWorkerUpdate = () => {\n  return serviceWorkerUpdating\n    ? {\n        shouldBecomeNavigatorController: Boolean(serviceWorkerAPI.controller),\n        navigatorWillReload: autoReloadEnabled,\n      }\n    : null\n}\n\nexport const listenServiceWorkerUpdate = (callback) => {\n  return serviceWorkerUpdatingChangeSignal.listen(callback)\n}\n\nexport const checkServiceWorkerUpdate = async () => {\n  if (!registrationPromise) {\n    console.warn(`registerServiceWorker must be called before checkServiceWorkerUpdate can be used`)\n    return false\n  }\n\n  const registration = await registrationPromise\n  // await for the registration promise above can take some time\n  // especially when the service worker is installing for the first time\n  // because it is fetching a lot of urls to put into cache.\n  // In that scenario we might want to display something different ?\n  // Without this UI seems to take ages to check for an update\n  const updateRegistration = await registration.update()\n\n  const { installing } = updateRegistration\n  if (installing) {\n    log(\"installing worker found after calling update()\")\n    serviceWorkerUpdatingSetter(installing)\n    return true\n  }\n\n  const { waiting } = updateRegistration\n  if (waiting) {\n    log(\"waiting worker found after calling update()\")\n    serviceWorkerUpdatingSetter(waiting)\n    return true\n  }\n\n  log(\"no worker found after calling update()\")\n  return false\n}\n\nexport const sendMessageToServiceWorkerUpdate = (message) => {\n  if (!serviceWorkerUpdating) {\n    console.warn(`no service worker updating to send message to`)\n    return undefined\n  }\n  return sendMessageUsingChannel(serviceWorkerUpdating, message)\n}\n\nexport const activateServiceWorkerUpdate = async (params) => {\n  if (!serviceWorkerUpdating) {\n    throw new Error(\"no service worker update to activate\")\n  }\n  return sendSkipWaitingToWorker(serviceWorkerUpdating, params)\n}\n\nconst sendSkipWaitingToWorker = async (\n  worker,\n  { onActivating = () => {}, onActivated = () => {}, onBecomesNavigatorController = () => {} } = {},\n) => {\n  const { state } = worker\n  const waitUntilActivated = () => {\n    return new Promise((resolve) => {\n      const removeStateChangeListener = listenEvent(worker, \"statechange\", () => {\n        if (worker.state === \"activating\") {\n          serviceWorkerSetter(serviceWorkerUpdating)\n          onActivating()\n        }\n        if (worker.state === \"activated\") {\n          serviceWorkerSetter(serviceWorkerUpdating)\n          onActivated()\n          removeStateChangeListener()\n          resolve()\n        }\n      })\n    })\n  }\n\n  // worker must be waiting (meaning state must be \"installed\")\n  // to be able to call skipWaiting on it.\n  // If it's installing it's an error.\n  // If it's activating, we'll just skip the skipWaiting call\n  // If it's activated, we'll just return early\n  if (state === \"installed\" || state === \"activating\") {\n    if (state === \"installed\") {\n      sendMessageToServiceWorkerUpdate({ action: \"skipWaiting\" })\n    }\n    if (state === \"activating\") {\n      serviceWorkerSetter(serviceWorkerUpdating)\n    }\n    await waitUntilActivated()\n\n    if (serviceWorkerAPI.controller) {\n      const removeControllerChangeListener = listenEvent(\n        serviceWorkerAPI,\n        \"controllerchange\",\n        () => {\n          removeControllerChangeListener()\n          onBecomesNavigatorController()\n          serviceWorkerUpdatingSetter(null)\n          if (autoReloadEnabled) reload()\n        },\n      )\n    } else {\n      serviceWorkerUpdatingSetter(null)\n      if (autoReloadEnabled) reload()\n    }\n    return\n  }\n\n  serviceWorkerSetter(serviceWorkerUpdating)\n  onBecomesNavigatorController()\n  serviceWorkerUpdatingSetter(null)\n  if (autoReloadEnabled) reload()\n}\n\nlet autoReloadEnabled = true\nlet disableAutoReload = () => {}\nexport const autoReloadAfterUpdateIsEnabled = () => autoReloadEnabled\nexport const disableAutoReloadAfterUpdate = () => disableAutoReload()\n\nlet refreshing = false\nconst reload = () => {\n  if (refreshing) {\n    return\n  }\n  refreshing = true\n  window.location.reload()\n}\n\nif (canUseServiceWorker) {\n  const removeControllerChangeListener = listenEvent(serviceWorkerAPI, \"controllerchange\", reload)\n\n  disableAutoReload = () => {\n    autoReloadEnabled = false\n    removeControllerChangeListener()\n  }\n}\n\n// const navigatorIsControlledByAServiceWorker = () => {\n//   return canUseServiceWorker ? Boolean(serviceWorkerAPI.controller) : false\n// }\n\n// const getServiceWorkerControllingNavigator = () => {\n//   return navigatorIsControlledByAServiceWorker() ? serviceWorkerAPI.controller : null\n// }\n",
    "import { addToHomescreen } from \"@jsenv/pwa\"\n\nconst buttonAddToHomescreen = document.createElement(\"button\")\nbuttonAddToHomescreen.disabled = !addToHomescreen.isAvailable()\nbuttonAddToHomescreen.innerHTML = \"Add to home screen\"\ndocument.body.appendChild(buttonAddToHomescreen)\n\nbuttonAddToHomescreen.onclick = () => {\n  addToHomescreen.prompt()\n}\naddToHomescreen.listenAvailabilityChange(() => {\n  buttonAddToHomescreen.disabled = !addToHomescreen.isAvailable()\n})\n",
    "import { registerServiceWorker } from \"@jsenv/pwa\"\n\n// wait a bit that browser is less busy to register the service worker\nconst callLater = requestIdleCallback ? requestIdleCallback : requestAnimationFrame\ncallLater(() => {\n  registerServiceWorker(\"/service_worker.js\")\n})\n",
    "import {\n  canUseServiceWorker,\n  getServiceWorkerUpdate,\n  listenServiceWorkerUpdate,\n  checkServiceWorkerUpdate,\n  activateServiceWorkerUpdate,\n} from \"@jsenv/pwa\"\n\nconst installServiceWorkerUpdateUI = () => {\n  const buttonCheckUpdate = document.createElement(\"button\")\n  buttonCheckUpdate.innerHTML = \"Check update\"\n  const paragraph = document.createElement(\"p\")\n  document.body.appendChild(buttonCheckUpdate)\n  document.body.appendChild(paragraph)\n\n  buttonCheckUpdate.onclick = async () => {\n    buttonCheckUpdate.disabled = true\n    paragraph.innerHTML = \"checking for update\"\n    const found = await checkServiceWorkerUpdate()\n\n    if (found) {\n      // when update is found, we already know from listenServiceWorkerUpdate\n    } else {\n      buttonCheckUpdate.disabled = false\n      paragraph.innerHTML = \"No update available\"\n    }\n  }\n\n  listenServiceWorkerUpdate(() => {\n    const available = Boolean(getServiceWorkerUpdate())\n    if (available) {\n      paragraph.innerHTML = `Update available <button>Activate update</button>`\n      paragraph.querySelector(\"button\").onclick = async () => {\n        paragraph.querySelector(\"button\").disabled = true\n        await activateServiceWorkerUpdate()\n      }\n    } else {\n      paragraph.innerHTML = \"\"\n    }\n  })\n}\n\nif (canUseServiceWorker) {\n  installServiceWorkerUpdateUI()\n}\n",
    "import { DEV } from \"#env\"\n\nexport const greet = () => {\n  return DEV ? \"Welcome dev\" : \"Welcome\"\n}\n",
    "/**\n * The actual app UI, very simplified of course.\n * Don't forget to call window.splashscreen.appIsReady() at some point\n * or the splashscreen will stay forever on top of the app UI\n */\n\nimport \"src/app/pwa/pwa.js\"\nimport { greet } from \"src/app/greet.js\"\n\nexport const render = () => {\n  document.querySelector(\"#app\").innerHTML = `\n\n<img src=${new URL(\"../logo.png\", import.meta.url)} width=\"64\" />\n\n<p>${greet()}</p>`\n}\n"
  ]
}