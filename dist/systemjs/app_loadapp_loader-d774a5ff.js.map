{
  "version": 3,
  "sources": [
    "../../node_modules/@jsenv/core/helpers/babel/arrayLikeToArray/arrayLikeToArray.js",
    "../../src/app_loader/app_loader_utils.js",
    "../../src/app_loader/app_loader.js",
    "../../node_modules/@jsenv/core/helpers/babel/slicedToArray/slicedToArray.js",
    "../../node_modules/@jsenv/core/helpers/babel/arrayWithHoles/arrayWithHoles.js",
    "../../node_modules/@jsenv/core/helpers/babel/iterableToArrayLimit/iterableToArrayLimit.js",
    "../../node_modules/@jsenv/core/helpers/babel/unsupportedIterableToArray/unsupportedIterableToArray.js",
    "../../node_modules/@jsenv/core/helpers/babel/nonIterableRest/nonIterableRest.js",
    "../../env.prod.js"
  ],
  "names": [
    "arrayLikeToArray",
    "arr",
    "len",
    "length",
    "arr2",
    "Array",
    "i",
    "injectCSS",
    "cssUrl",
    "crossOrigin",
    "Promise",
    "resolve",
    "reject",
    "link",
    "document",
    "createElement",
    "rel",
    "onload",
    "onerror",
    "href",
    "head",
    "appendChild",
    "nextIDLEPromise",
    "window",
    "requestIdleCallback",
    "e",
    "arguments",
    "n",
    "timeout",
    "requestAnimationFrame",
    "u",
    "value",
    "then",
    "direct",
    "s",
    "f",
    "args",
    "apply",
    "this",
    "a",
    "all",
    "prepareApp",
    "importApp",
    "app",
    "isArray",
    "_i",
    "Symbol",
    "iterator",
    "_s",
    "_e",
    "_arr",
    "_n",
    "_d",
    "call",
    "next",
    "done",
    "push",
    "err",
    "return",
    "o",
    "minLen",
    "Object",
    "prototype",
    "toString",
    "slice",
    "constructor",
    "name",
    "from",
    "test",
    "TypeError",
    "body",
    "result",
    "render",
    "splashscreen",
    "appIsReady",
    "race",
    "loadCSSAndFonts",
    "setTimeout",
    "appCSSLoadedPromise",
    "URL",
    "System",
    "import",
    "takeOver",
    "updateSplascreenText",
    "message",
    "querySelector",
    "innerHTML",
    "recover",
    "fonts",
    "ready",
    "module"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* eslint-disable no-eq-null, eqeqeq */\nexport default function arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length\n  var arr2 = new Array(len)\n  for (var i = 0; i < len; i++) arr2[i] = arr[i]\n  return arr2\n}\n",
    "export const injectCSS = (cssUrl, { crossOrigin } = {}) => {\n  return new Promise((resolve, reject) => {\n    const link = document.createElement(\"link\")\n    link.rel = \"stylesheet\"\n    link.onload = resolve\n    link.onerror = reject\n    link.href = cssUrl\n    link.crossOrigin = crossOrigin\n    document.head.appendChild(link)\n  })\n}\n\nexport const nextIDLEPromise = window.requestIdleCallback\n  ? ({ timeout = 60 } = {}) => {\n      return new Promise((resolve) => {\n        window.requestIdleCallback(resolve, { timeout })\n      })\n    }\n  : () => {\n      return new Promise((resolve) => {\n        window.requestAnimationFrame(resolve)\n      })\n    }\n",
    "/**\n * This is where you can orchestrate the loading of your application\n */\n\nimport { DEV } from \"#env\"\nimport { injectCSS, nextIDLEPromise } from \"./app_loader_utils.js\"\n\nexport const loadApp = async () => {\n  const [, app] = await Promise.all([prepareApp(), importApp()])\n  // app.render() can be very expensive so we wait a bit\n  // to let navigator an opportunity to cooldown.\n  // This should help to save battery power and RAM\n  await nextIDLEPromise()\n  app.render()\n  if (DEV) {\n    performance.measure(`App displayed`)\n  }\n  window.splashscreen.appIsReady()\n}\n\nconst prepareApp = async () => {\n  // try to load CSS + get the main fonts before displaying any text\n  // to avoid font swapping if possible\n  // give max 400ms for this\n  await Promise.race([\n    loadCSSAndFonts(),\n    new Promise((resolve) => setTimeout(resolve, 400)),\n  ])\n\n  const appCSSLoadedPromise = injectCSS(\n    new URL(\"../app/app.css\", import.meta.url),\n  )\n\n  // De-comment the await below to test the case where load is slow\n  // await new Promise((resolve) => {\n  //   setTimeout(resolve, 3500)\n  // })\n\n  // window.splashscreen.takeOver() means this code is taking responsability of the splashscreen.\n  // It prevents main.html to display <div id=\"booting_is_slow\"></div> to the user\n  window.splashscreen.takeOver()\n\n  const updateSplascreenText = (message) => {\n    const splashscreenMessageNode = document.querySelector(\n      \"#splashscreen_message\",\n    )\n    splashscreenMessageNode.innerHTML = message\n  }\n\n  updateSplascreenText(`Loading banana...`)\n  if (DEV) {\n    performance.measure(`\"loading bannana...\" displayed`)\n  }\n  await new Promise((resolve) => {\n    setTimeout(resolve, 800)\n  })\n\n  updateSplascreenText(`Loading gorilla...`)\n  if (DEV) {\n    performance.measure(`\"loading gorilla...\" displayed`)\n  }\n  await new Promise((resolve) => {\n    setTimeout(resolve, 1000)\n  })\n\n  updateSplascreenText(`Loading the entire jungle...`)\n  if (DEV) {\n    performance.measure(`\"entire jungle...\" displayed`)\n  }\n  await new Promise((resolve) => {\n    setTimeout(resolve, 1200)\n  })\n\n  await appCSSLoadedPromise\n}\n\nconst loadCSSAndFonts = async () => {\n  try {\n    await injectCSS(new URL(\"./app_loader.css\", import.meta.url))\n    if (DEV) {\n      performance.measure(`app_loader.css loaded`)\n    }\n    await document.fonts.ready\n    if (DEV) {\n      performance.measure(`fonts ready`)\n    }\n  } catch (e) {\n    return\n  }\n}\n\nconst importApp = async () => {\n  const app = await import(\"../app/app.js\")\n  if (DEV) {\n    performance.measure(\"app.js imported\")\n  }\n  return app\n}\n",
    "import arrayWithHoles from \"../arrayWithHoles/arrayWithHoles.js\"\nimport iterableToArrayLimit from \"../iterableToArrayLimit/iterableToArrayLimit.js\"\nimport unsupportedIterableToArray from \"../unsupportedIterableToArray/unsupportedIterableToArray.js\"\nimport nonIterableRest from \"../nonIterableRest/nonIterableRest.js\"\n\nexport default (arr, i) =>\n  arrayWithHoles(arr) ||\n  iterableToArrayLimit(arr, i) ||\n  unsupportedIterableToArray(arr, i) ||\n  nonIterableRest()\n",
    "// eslint-disable-next-line consistent-return\nexport default (arr) => {\n  if (Array.isArray(arr)) return arr\n}\n",
    "export default function _iterableToArrayLimit(arr, i) {\n  // this is an expanded form of \\`for...of\\` that properly supports abrupt completions of\n  // iterators etc. variable names have been minimised to reduce the size of this massive\n  // helper. sometimes spec compliance is annoying :(\n  //\n  // _n = _iteratorNormalCompletion\n  // _d = _didIteratorError\n  // _e = _iteratorError\n  // _i = _iterator\n  // _s = _step\n  var _i =\n    arr == null\n      ? null\n      : (typeof Symbol !== \"undefined\" && arr[Symbol.iterator]) || arr[\"@@iterator\"]\n  if (_i == null) return\n  var _arr = []\n  var _n = true\n  var _d = false\n  var _s, _e\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value)\n      if (i && _arr.length === i) break\n    }\n  } catch (err) {\n    _d = true\n    _e = err\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]()\n    } finally {\n      if (_d) throw _e\n    }\n  }\n  return _arr\n}\n",
    "/* eslint-disable consistent-return */\nimport arrayLikeToArray from \"../arrayLikeToArray/arrayLikeToArray.js\"\n\nexport default function unsupportedIterableToArray(o, minLen) {\n  if (!o) return\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen)\n  var n = Object.prototype.toString.call(o).slice(8, -1)\n  if (n === \"Object\" && o.constructor) n = o.constructor.name\n  if (n === \"Map\" || n === \"Set\") return Array.from(o)\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\n    return arrayLikeToArray(o, minLen)\n}\n",
    "export default () => {\n  throw new TypeError(\n    \"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\",\n  )\n}\n",
    "/**\n * This file is used when code imports from \"#env\"\n *\n * import { DEV } from \"#env\"\n *\n * And importmap contains \"#env\": \"./env.prod.js\" mapping\n * This happens when using \"prod.importmap\" file\n * See https://github.com/jsenv/jsenv-template-pwa/blob/main/docs/production_mode/production_mode.md#production-mode\n */\n\nexport const DEV = false\n"
  ]
}