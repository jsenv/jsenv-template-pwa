{
  "version": 3,
  "file": "main.140.js",
  "sources": [
    "../../.jsenv/out-build/otherwise/main.140.js"
  ],
  "sourcesContent": [
    "\n      window.splashscreen = {\n        /*\n         * takeOver is implemented later in this script.\n         * takeOver is meant to be called by code that want to take responsability\n         * of what is displayed in the splashscreen\n         *\n         * It is used by boot/boot.js once it starts to render a different UI in the splashscreen\n         */\n        takeOver: () => {},\n        /*\n         * appIsReady is implemented later in this script.\n         * appIsReady is meant to be called once the app inside <div id=\"app\"></div>\n         * is ready to be displayed to the user (HTML rendered and CSS, images, fonts, ... are loaded).\n         *\n         * It is used by app/app.js once it has rendered the HTML and font is loaded\n         */\n        appIsReady: () => {},\n      }\n\n      const appNode = document.querySelector(\"#app\")\n      const splashscreenNode = document.querySelector(\"#splashscreen\")\n\n      const BOOTING_START = \"booting_start\"\n      const BOOTING_IS_SLOW = \"booting_is_slow\"\n      const BOOTING_ERROR = \"booting_error\"\n\n      const boot = async () => {\n        // In case page takes more than 2,5s to boot\n        const bootingIsSlowTimeout = setTimeout(() => {\n          setBootingState(BOOTING_IS_SLOW)\n        }, 2500)\n        // De-comment the await below to test the case where boot is slow\n        // await new Promise((resolve) => {\n        //   setTimeout(resolve, 3500)\n        // })\n\n        window.splashscreen.takeOver = () => {\n          clearTimeout(bootingIsSlowTimeout)\n        }\n\n        // In case boot main file loads and execute fast, splashscreen would\n        // fadein + fadeout too soon creating a blink.\n        // -> To prevent the blink we wait at leat 700ms before actually removing the splashscreen\n        // Other strategies are valid and could be preferred instead of this one.\n        const minMsEllapsed = new Promise((resolve) => {\n          setTimeout(resolve, 700)\n        })\n        window.splashscreen.appIsReady = async () => {\n          clearTimeout(bootingIsSlowTimeout)\n          appNode.removeAttribute(\"data-booting\")\n\n          await minMsEllapsed\n          splashscreenNode.setAttribute(\"data-booting-done\", \"\")\n          // Wait the end of the \"splashout\" animation before killing splashscreen entirely\n          setTimeout(() => {\n            // Here splashscreen is \"killed\" with display: 'none' but it could also\n            // be removed from the DOM\n            splashscreenNode.style.display = \"none\"\n          }, 300)\n        }\n\n        try {\n          setBootingState(BOOTING_START)\n          await import(\"./src/boot/boot.js\")\n        } catch (error) {\n          clearTimeout(bootingIsSlowTimeout)\n\n          setBootingState(BOOTING_ERROR, {\n            errorStack:\n              error.stack ||\n              `<No stack associated with this error> (Check devtools to get more info)`,\n          })\n          throw error\n        }\n      }\n\n      const setBootingState = (nextBootingState, data = {}) => {\n        //  bootingState = nextBootingState\n\n        const splashscreenContent = document.querySelector(\"#splashscreen_content\")\n        splashscreenContent.innerHTML = \"\"\n        const variantModel = document.querySelector(`#${nextBootingState}`)\n        const variantInstance = variantModel.cloneNode(true)\n\n        replaceNodeVariables(variantInstance, data)\n        splashscreenContent.appendChild(variantInstance)\n      }\n\n      const replaceNodeVariables = (node, data) => {\n        if (node.nodeName === \"#text\") {\n          node.textContent = node.textContent.replace(/\\${(\\w*)}/g, (_, key) => {\n            return data.hasOwnProperty(key) ? data[key] : \"\"\n          })\n          return\n        }\n\n        Array.from(node.childNodes).forEach((node) => {\n          replaceNodeVariables(node, data)\n        })\n      }\n\n      boot()\n    "
  ],
  "names": [
    "f",
    "args",
    "i",
    "arguments",
    "length",
    "Promise",
    "resolve",
    "apply",
    "this",
    "e",
    "reject",
    "window",
    "splashscreen",
    "takeOver",
    "appIsReady",
    "appNode",
    "document",
    "querySelector",
    "splashscreenNode",
    "boot",
    "bootingIsSlowTimeout",
    "setTimeout",
    "setBootingState",
    "clearTimeout",
    "minMsEllapsed",
    "removeAttribute",
    "value",
    "then",
    "setAttribute",
    "style",
    "display",
    "direct",
    "body",
    "recover",
    "result",
    "module",
    "error",
    "errorStack",
    "stack",
    "nextBootingState",
    "data",
    "splashscreenContent",
    "innerHTML",
    "variantModel",
    "variantInstance",
    "cloneNode",
    "replaceNodeVariables",
    "appendChild",
    "node",
    "nodeName",
    "Array",
    "from",
    "childNodes",
    "forEach",
    "textContent",
    "replace",
    "_",
    "key",
    "hasOwnProperty"
  ],
  "mappings": "yEAgmBO,cA1hBA,WAAgBA,UACf,eACD,IAAIC,EAAO,GAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAChDD,EAAKC,GAAKC,UAAUD,cAGbG,QAAQC,QAAQN,EAAEO,MAAMC,KAAMP,IACpC,MAAMQ,UACAJ,QAAQK,OAAOD,KA7EnBE,OAAOC,aAAe,CAQpBC,SAAU,aAQVC,WAAY,cAGd,IAAMC,EAAUC,SAASC,cAAc,QACjCC,EAAmBF,SAASC,cAAc,iBAM1CE,oBAEEC,EAAuBC,YAAW,WACtCC,EANoB,qBAOnB,MAMHX,OAAOC,aAAaC,SAAW,WAC7BU,aAAaH,QAOTI,EAAgB,IAAInB,SAAQ,SAACC,GACjCe,WAAWf,EAAS,eAEtBK,OAAOC,aAAaE,gCAClBS,aAAaH,GACbL,EAAQU,gBAAgB,gBAkCXC,EAhCPF,EAgCcG,aA/BpBT,EAAiBU,aAAa,oBAAqB,IAEnDP,YAAW,WAGTH,EAAiBW,MAAMC,QAAU,SAChC,MA0BRC,EACIJ,EAAOA,EAAKD,GAASA,GAExBA,GAAUA,EAAMC,OACpBD,EAAQrB,QAAQC,QAAQoB,IAElBC,EAAOD,EAAMC,KAAKA,GAAQD,GAP3B,IAAgBA,EAAOC,EAAMI,KA8d7B,SAAgBC,EAAMC,WAEvBC,EAASF,IACZ,MAAMvB,UACAwB,EAAQxB,UAEZyB,GAAUA,EAAOP,KACbO,EAAOP,UAAK,EAAQM,GAErBC,sBA5fEZ,EAxCkB,iBAwErB,SAAuBI,EAAOK,OAC/BA,SACGL,GAASA,EAAMC,KAAOD,EAAMC,QAAetB,QAAQC,WAjC5C6B,SAAO,0BACNC,SACPb,aAAaH,GAEbE,EA3CkB,gBA2Ca,CAC7Be,WACED,EAAME,mFAGJF,QAIJd,EAAkB,SAACiB,OAAkBC,yDAAO,GAG1CC,EAAsBzB,SAASC,cAAc,yBACnDwB,EAAoBC,UAAY,OAC1BC,EAAe3B,SAASC,yBAAkBsB,IAC1CK,EAAkBD,EAAaE,WAAU,GAE/CC,EAAqBF,EAAiBJ,GACtCC,EAAoBM,YAAYH,IAG5BE,EAAuB,SAAvBA,EAAwBE,EAAMR,GACZ,UAAlBQ,EAAKC,SAOTC,MAAMC,KAAKH,EAAKI,YAAYC,SAAQ,SAACL,GACnCF,EAAqBE,EAAMR,MAP3BQ,EAAKM,YAAcN,EAAKM,YAAYC,QAAQ,cAAc,SAACC,EAAGC,UACrDjB,EAAKkB,eAAeD,GAAOjB,EAAKiB,GAAO,OAUpDtC"
}