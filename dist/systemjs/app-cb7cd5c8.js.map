{
  "version": 3,
  "file": "app.js",
  "sources": [
    "../../node_modules/@jsenv/pwa/src/internal/listenEvent.js",
    "../../node_modules/@jsenv/pwa/src/listenAppInstalled.js",
    "../../node_modules/@jsenv/pwa/src/displayModeStandalone.js",
    "../../node_modules/@jsenv/pwa/src/add-to-home-screen.js",
    "../../node_modules/@jsenv/pwa/src/internal/createSignal.js",
    "../../node_modules/@jsenv/pwa/src/internal/sendMessageUsingChannel.js",
    "../../node_modules/@jsenv/pwa/src/navigatorController.js",
    "../../src/app/pwa/add_to_home_screen.js",
    "../../src/app/pwa/service_worker.js",
    "../../src/app/pwa/pwa.js",
    "../../src/app/greet.js",
    "../../src/app/app.js"
  ],
  "sourcesContent": [
    "export const listenEvent = (objectWithEventEmitter, event, callback) => {\n  objectWithEventEmitter.addEventListener(event, callback)\n  return () => {\n    objectWithEventEmitter.removeEventListener(event, callback)\n  }\n}\n",
    "/**\n * - User can decide by himself to install the application from the browser toolbar.\n * - Or application code is allowed to prompt user to do so on a user interaction such\n * as after clicking on a button.\n * In these scenarios when user clicks install on that prompt displayed by the browser,\n * browser dispatch an \"appinstalled\" event.\n */\n\nexport const listenAppInstalled = (callback) => {\n  window.addEventListener(\"appinstalled\", callback)\n  return () => {\n    window.removeEventListener(\"appinstalled\", callback)\n  }\n}\n\n// listenAppInstalled(() => {\n//   document.querySelector(\"#install\").disabled = true\n// })\n",
    "/**\n * displayModeStandalone can be used to know the current displayMode of\n * our web page is standalone (PWA)\n */\n\nexport const displayModeStandalone = {\n  get: () => window.navigator.standalone || window.matchMedia(\"(display-mode: standalone)\").matches,\n  listen: (callback) => {\n    const media = window.matchMedia(\"(display-mode: standalone)\")\n    media.addListener(callback)\n    return () => {\n      media.removeListener(callback)\n    }\n  },\n}\n",
    "/**\n  The following scenario is working:\n\n  - user click install button -> browser shows add to home screen prompt\n  - user click cancel on browser prompt\n  - user click again install button -> browser shows again add to home screen prompt\n\n  It's very easy to break this so that subsequent click does nothing.\n  Nothing means browser always returns a \"dimissed\" user choice without asking user.\n  I suspect chrome is trying to prevent malicious script to annoy user\n  by calling prompt() many times.\n\n  It's currently working because we don't hide beforeinstallpromptEvent behind a function.\n  It would be hidden behind a function if we put it into react state or\n  just by using a curried funciton like:\n\n  beforeinstallpromptEvent\n  const curriedFunction = () => {\n    beforeinstallpromptEvent.prompt()\n  }\n\n  If we do so, chrome will always dismiss subsequent click on install button. (until page is reloaded).\n  To avoid that we store the event on window.beforeinstallpromptEvent.\n*/\n\nimport { listenEvent } from \"./internal/listenEvent.js\"\nimport { listenAppInstalled } from \"./listenAppInstalled.js\"\nimport { displayModeStandalone } from \"./displayModeStandalone.js\"\n\nlet appInstalledEvent = false\n\nlistenAppInstalled(() => {\n  // prompt \"becomes\" unavailable if user installs app\n  // it can happen if user installs app manually from browser toolbar\n  // in that case there is no point showing the install\n  // button in the ui\n  appInstalledEvent = true\n})\n\nexport const addToHomescreen = {\n  isAvailable: () => {\n    if (!window.beforeinstallpromptEvent) {\n      return false\n    }\n\n    if (displayModeStandalone.get()) {\n      return false\n    }\n\n    if (appInstalledEvent) {\n      return false\n    }\n\n    return true\n  },\n\n  listenAvailabilityChange: (callback) => {\n    let availablePrevious = addToHomescreen.isAvailable()\n\n    const checkAvailabilityChange = () => {\n      const available = addToHomescreen.isAvailable()\n      if (available !== availablePrevious) {\n        availablePrevious = available\n        callback(available)\n      }\n    }\n\n    const removeBeforeInstallPromptListener = listenBeforeInstallPrompt(\n      (beforeinstallpromptEvent) => {\n        window.beforeinstallpromptEvent = beforeinstallpromptEvent\n        checkAvailabilityChange()\n      },\n    )\n\n    const removeDisplayModeListener = displayModeStandalone.listen(() => {\n      checkAvailabilityChange()\n    })\n\n    const removeAppInstalledListener = listenAppInstalled(() => {\n      // prompt \"becomes\" unavailable if user installs app\n      // it can happen if user installs app manually from browser toolbar\n      // in that case there is no point showing the install\n      // button in the ui\n      appInstalledEvent = true\n      checkAvailabilityChange()\n    })\n\n    return () => {\n      removeBeforeInstallPromptListener()\n      removeDisplayModeListener()\n      removeAppInstalledListener()\n    }\n  },\n\n  prompt: async () => {\n    if (!window.beforeinstallpromptEvent) {\n      console.warn(`cannot prompt add to home screen: window.beforeinstallpromptEvent is missing`)\n      return false\n    }\n\n    window.beforeinstallpromptEvent.prompt()\n    const choiceResult = await window.beforeinstallpromptEvent.userChoice\n    if (choiceResult.outcome === \"accepted\") {\n      return true\n    }\n    return false\n  },\n}\n\nconst listenBeforeInstallPrompt = (callback) => listenEvent(window, \"beforeinstallprompt\", callback)\n",
    "export const createSignal = () => {\n  let listeners = []\n\n  const listen = (callback, { once = false } = {}) => {\n    if (once) {\n      const callbackOriginal = callback\n      callback = (...args) => {\n        stopListening()\n        callbackOriginal(...args)\n      }\n    }\n\n    listeners = [...listeners, callback]\n\n    let removed = false\n    const stopListening = () => {\n      if (removed) return\n      removed = true\n      const listenersWithoutCallback = []\n      let i = listeners.length\n      let searching = true\n      while (i--) {\n        const listenerCandidate = listeners[i]\n        if (searching) {\n          if (listenerCandidate === callback) {\n            searching = false\n          } else {\n            listenersWithoutCallback.push(listenerCandidate)\n          }\n        } else {\n          listenersWithoutCallback.push(listenerCandidate)\n        }\n      }\n      listeners = listenersWithoutCallback\n    }\n    return stopListening\n  }\n\n  const emit = (...args) => {\n    listeners.forEach((listener) => {\n      listener(...args)\n    })\n  }\n\n  return {\n    listen,\n    emit,\n  }\n}\n",
    "// https://felixgerschau.com/how-to-communicate-with-service-workers/\nexport const sendMessageUsingChannel = (objectWithPostMessage, message) => {\n  const { port1, port2 } = new MessageChannel()\n  return new Promise((resolve, reject) => {\n    port1.onmessage = function (event) {\n      if (event.data.status === \"rejected\") {\n        reject(event.data.value)\n      } else {\n        resolve(event.data.value)\n      }\n    }\n    objectWithPostMessage.postMessage(message, [port2])\n  })\n}\n",
    "// do not forget error handling: https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/onerror\n\nimport { createSignal } from \"./internal/createSignal.js\"\nimport { listenEvent } from \"./internal/listenEvent.js\"\nimport { sendMessageUsingChannel } from \"./internal/sendMessageUsingChannel.js\"\n\nconst serviceWorkerAPI = window.navigator.serviceWorker\nlet logEnabled = false\nconst log = (...args) => {\n  if (logEnabled) {\n    console.log(...args)\n  }\n}\n\nexport const enableServiceWorkerLogs = () => {\n  logEnabled = true\n}\n\nexport const canUseServiceWorker =\n  Boolean(serviceWorkerAPI) && document.location.protocol === \"https:\"\n\n// https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration\nlet registrationPromise = null\nlet serviceWorker = null\nconst serviceWorkerSetter = (worker) => {\n  serviceWorker = worker\n}\n\nlet serviceWorkerUpdating = null\nconst serviceWorkerUpdatingChangeSignal = createSignal()\nconst serviceWorkerUpdatingSetter = (worker) => {\n  if (serviceWorkerUpdating && serviceWorkerUpdating === worker) {\n    // we already know about this worker, no need to listen state changes.\n    // it happens for manual updates where we bot detect it\n    // from registration.update() return value\n    // and \"updatefound\" event\n    log(\"we already know this worker is updating\")\n    return\n  }\n  if (worker) {\n    log(`found a worker updating (worker state is: ${worker.state})`)\n  } else {\n    log(`worker update is done`)\n  }\n  serviceWorkerUpdating = worker\n  serviceWorkerUpdatingChangeSignal.emit()\n}\n\nexport const serviceWorkerIsAvailable = () => Boolean(registrationPromise)\n\nexport const registerServiceWorker = (url, { scope } = {}) => {\n  if (!canUseServiceWorker) {\n    return () => {}\n  }\n\n  let unregistered = false\n  let unregister = () => {}\n  let removeUpdateFoundListener = () => {}\n\n  registrationPromise = serviceWorkerAPI.register(url, { scope })\n  ;(async () => {\n    const registration = await registrationPromise\n    unregister = () => {\n      registration.unregister()\n    }\n\n    if (unregistered) {\n      unregister()\n      return\n    }\n\n    const { installing, waiting, active } = registration\n    serviceWorkerSetter(installing || waiting || active)\n    removeUpdateFoundListener = listenEvent(registration, \"updatefound\", () => {\n      log(\"browser notifies use an worker is installing\")\n      if (registration.installing === installing) {\n        log(`it's not an worker update, it's first time worker registers`)\n        return\n      }\n      serviceWorkerUpdatingSetter(registration.installing)\n    })\n  })()\n\n  return () => {\n    unregistered = true\n    removeUpdateFoundListener()\n    unregister()\n  }\n}\n\n// export const getServiceWorkerState = () => {\n//   if (serviceWorker) {\n//     return serviceWorker.state\n//   }\n//   return null\n// }\n\n// export const listenServiceWorkerState = (callback) => {\n//   let removeStateChangeListener = () => {}\n//   const removeWorkerChangeListener = serviceWorkerChangeSignal.listen(() => {\n//     callback()\n//     removeStateChangeListener = listenEvent(serviceWorker, \"statechange\", callback)\n//   })\n//   return () => {\n//     removeWorkerChangeListener()\n//     removeStateChangeListener()\n//   }\n// }\n\n// For now this function will try to communicate with the old service worker\n// even if new worker is activating or activated.\n// It might not work because, from what I understood, the old worker gets killed\n// by the navigator as soon as the new worker starts to activate.\n// Maybe it should communicate with the new worker as soon as we know\n// updating worker is activating or activated.\n// -> yes\nexport const sendMessageToServiceWorker = (message) => {\n  if (!serviceWorker) {\n    console.warn(`no service worker to send message to`)\n    return undefined\n  }\n  return sendMessageUsingChannel(serviceWorker, message)\n}\n\nexport const getServiceWorkerUpdate = () => {\n  return serviceWorkerUpdating\n    ? {\n        shouldBecomeNavigatorController: Boolean(serviceWorkerAPI.controller),\n        navigatorWillReload: autoReloadEnabled,\n      }\n    : null\n}\n\nexport const listenServiceWorkerUpdate = (callback) => {\n  return serviceWorkerUpdatingChangeSignal.listen(callback)\n}\n\nexport const checkServiceWorkerUpdate = async () => {\n  if (!registrationPromise) {\n    console.warn(`registerServiceWorker must be called before checkServiceWorkerUpdate can be used`)\n    return false\n  }\n\n  const registration = await registrationPromise\n  // await for the registration promise above can take some time\n  // especially when the service worker is installing for the first time\n  // because it is fetching a lot of urls to put into cache.\n  // In that scenario we might want to display something different ?\n  // Without this UI seems to take ages to check for an update\n  const updateRegistration = await registration.update()\n\n  const { installing } = updateRegistration\n  if (installing) {\n    log(\"installing worker found after calling update()\")\n    serviceWorkerUpdatingSetter(installing)\n    return true\n  }\n\n  const { waiting } = updateRegistration\n  if (waiting) {\n    log(\"waiting worker found after calling update()\")\n    serviceWorkerUpdatingSetter(waiting)\n    return true\n  }\n\n  log(\"no worker found after calling update()\")\n  return false\n}\n\nexport const sendMessageToServiceWorkerUpdate = (message) => {\n  if (!serviceWorkerUpdating) {\n    console.warn(`no service worker updating to send message to`)\n    return undefined\n  }\n  return sendMessageUsingChannel(serviceWorkerUpdating, message)\n}\n\nexport const activateServiceWorkerUpdate = async (params) => {\n  if (!serviceWorkerUpdating) {\n    throw new Error(\"no service worker update to activate\")\n  }\n  return sendSkipWaitingToWorker(serviceWorkerUpdating, params)\n}\n\nconst sendSkipWaitingToWorker = async (\n  worker,\n  { onActivating = () => {}, onActivated = () => {}, onBecomesNavigatorController = () => {} } = {},\n) => {\n  const { state } = worker\n  const waitUntilActivated = () => {\n    return new Promise((resolve) => {\n      const removeStateChangeListener = listenEvent(worker, \"statechange\", () => {\n        if (worker.state === \"activating\") {\n          serviceWorkerSetter(serviceWorkerUpdating)\n          onActivating()\n        }\n        if (worker.state === \"activated\") {\n          serviceWorkerSetter(serviceWorkerUpdating)\n          onActivated()\n          removeStateChangeListener()\n          resolve()\n        }\n      })\n    })\n  }\n\n  // worker must be waiting (meaning state must be \"installed\")\n  // to be able to call skipWaiting on it.\n  // If it's installing it's an error.\n  // If it's activating, we'll just skip the skipWaiting call\n  // If it's activated, we'll just return early\n  if (state === \"installed\" || state === \"activating\") {\n    if (state === \"installed\") {\n      sendMessageToServiceWorkerUpdate({ action: \"skipWaiting\" })\n    }\n    if (state === \"activating\") {\n      serviceWorkerSetter(serviceWorkerUpdating)\n    }\n    await waitUntilActivated()\n\n    if (serviceWorkerAPI.controller) {\n      const removeControllerChangeListener = listenEvent(\n        serviceWorkerAPI,\n        \"controllerchange\",\n        () => {\n          removeControllerChangeListener()\n          onBecomesNavigatorController()\n          serviceWorkerUpdatingSetter(null)\n          if (autoReloadEnabled) reload()\n        },\n      )\n    } else {\n      serviceWorkerUpdatingSetter(null)\n      if (autoReloadEnabled) reload()\n    }\n    return\n  }\n\n  serviceWorkerSetter(serviceWorkerUpdating)\n  onBecomesNavigatorController()\n  serviceWorkerUpdatingSetter(null)\n  if (autoReloadEnabled) reload()\n}\n\nlet autoReloadEnabled = true\nlet disableAutoReload = () => {}\nexport const autoReloadAfterUpdateIsEnabled = () => autoReloadEnabled\nexport const disableAutoReloadAfterUpdate = () => disableAutoReload()\n\nlet refreshing = false\nconst reload = () => {\n  if (refreshing) {\n    return\n  }\n  refreshing = true\n  window.location.reload()\n}\n\nif (canUseServiceWorker) {\n  const removeControllerChangeListener = listenEvent(serviceWorkerAPI, \"controllerchange\", reload)\n\n  disableAutoReload = () => {\n    autoReloadEnabled = false\n    removeControllerChangeListener()\n  }\n}\n\n// const navigatorIsControlledByAServiceWorker = () => {\n//   return canUseServiceWorker ? Boolean(serviceWorkerAPI.controller) : false\n// }\n\n// const getServiceWorkerControllingNavigator = () => {\n//   return navigatorIsControlledByAServiceWorker() ? serviceWorkerAPI.controller : null\n// }\n",
    "import { addToHomescreen } from \"@jsenv/pwa\"\n\nexport const initAddToHomeScreen = (app) => {\n  const buttonAddToHomescreen = document.createElement(\"button\")\n  buttonAddToHomescreen.disabled = !addToHomescreen.isAvailable()\n  buttonAddToHomescreen.innerHTML = \"Add to home screen\"\n  app.appendChild(buttonAddToHomescreen)\n\n  buttonAddToHomescreen.onclick = () => {\n    addToHomescreen.prompt()\n  }\n  addToHomescreen.listenAvailabilityChange(() => {\n    buttonAddToHomescreen.disabled = !addToHomescreen.isAvailable()\n  })\n}\n",
    "import {\n  canUseServiceWorker,\n  registerServiceWorker,\n  getServiceWorkerUpdate,\n  listenServiceWorkerUpdate,\n  checkServiceWorkerUpdate,\n  activateServiceWorkerUpdate,\n} from \"@jsenv/pwa\"\n\nconst serviceWorkerUrl = new URL(\"../../service_worker.js\", import.meta.url)\n\nexport const initServiceWorker = (app) => {\n  if (!canUseServiceWorker) {\n    return\n  }\n\n  // wait a bit that browser is less busy to register the service worker\n  const callLater = window.requestIdleCallback || requestAnimationFrame\n  callLater(() => {\n    registerServiceWorker(serviceWorkerUrl)\n  })\n\n  installServiceWorkerUpdateUI(app)\n}\n\nconst installServiceWorkerUpdateUI = (app) => {\n  const buttonCheckUpdate = document.createElement(\"button\")\n  buttonCheckUpdate.innerHTML = \"Check update\"\n  const paragraph = document.createElement(\"p\")\n  app.appendChild(buttonCheckUpdate)\n  app.appendChild(paragraph)\n\n  buttonCheckUpdate.onclick = async () => {\n    buttonCheckUpdate.disabled = true\n    paragraph.innerHTML = \"checking for update\"\n    const found = await checkServiceWorkerUpdate()\n\n    if (found) {\n      // when update is found, we already know from listenServiceWorkerUpdate\n    } else {\n      buttonCheckUpdate.disabled = false\n      paragraph.innerHTML = \"No update available\"\n    }\n  }\n\n  listenServiceWorkerUpdate(() => {\n    const available = Boolean(getServiceWorkerUpdate())\n    if (available) {\n      paragraph.innerHTML = `Update available <button>Activate update</button>`\n      paragraph.querySelector(\"button\").onclick = async () => {\n        paragraph.querySelector(\"button\").disabled = true\n        await activateServiceWorkerUpdate()\n      }\n    } else {\n      paragraph.innerHTML = \"\"\n    }\n  })\n}\n",
    "import { initAddToHomeScreen } from \"./add_to_home_screen.js\"\nimport { initServiceWorker } from \"./service_worker.js\"\n\nexport const initPwa = (app) => {\n  initAddToHomeScreen(app)\n  initServiceWorker(app)\n}\n",
    "import { DEV } from \"#env\"\n\nexport const greet = () => {\n  return DEV ? \"Welcome dev\" : \"Welcome\"\n}\n",
    "/**\n * The actual app UI, very simplified of course\n */\n\nimport { initPwa } from \"root/src/app/pwa/pwa.js\"\nimport { greet } from \"root/src/app/greet.js\"\n\nconst app = document.querySelector(\"#app\")\n\nexport const render = () => {\n  const logoUrl = new URL(\"../logo.png\", import.meta.url)\n\n  app.innerHTML = `\n<img src=${logoUrl} width=\"64\" height=\"64\" alt=\"jsenv logo\" />\n<p>${greet()}</p>`\n\n  initPwa(app)\n}\n"
  ],
  "names": [
    "listenEvent",
    "objectWithEventEmitter",
    "event",
    "callback",
    "addEventListener",
    "removeEventListener",
    "listenAppInstalled",
    "window",
    "displayModeStandalone",
    "get",
    "navigator",
    "standalone",
    "matchMedia",
    "matches",
    "listen",
    "media",
    "addListener",
    "removeListener",
    "_await",
    "value",
    "then",
    "direct",
    "Promise",
    "resolve",
    "appInstalledEvent",
    "f",
    "args",
    "i",
    "arguments",
    "length",
    "apply",
    "e",
    "reject",
    "addToHomescreen",
    "isAvailable",
    "beforeinstallpromptEvent",
    "listenAvailabilityChange",
    "availablePrevious",
    "checkAvailabilityChange",
    "available",
    "removeBeforeInstallPromptListener",
    "listenBeforeInstallPrompt",
    "removeDisplayModeListener",
    "removeAppInstalledListener",
    "prompt",
    "console",
    "warn",
    "userChoice",
    "choiceResult",
    "outcome",
    "createSignal",
    "listeners",
    "once",
    "callbackOriginal",
    "stopListening",
    "removed",
    "listenersWithoutCallback",
    "searching",
    "listenerCandidate",
    "push",
    "emit",
    "forEach",
    "listener",
    "sendMessageUsingChannel",
    "objectWithPostMessage",
    "message",
    "MessageChannel",
    "port1",
    "port2",
    "onmessage",
    "data",
    "status",
    "postMessage",
    "serviceWorkerAPI",
    "serviceWorker",
    "_async",
    "_call",
    "body",
    "result",
    "log",
    "canUseServiceWorker",
    "Boolean",
    "document",
    "location",
    "protocol",
    "registrationPromise",
    "serviceWorkerUpdating",
    "serviceWorkerUpdatingChangeSignal",
    "serviceWorkerUpdatingSetter",
    "worker",
    "state",
    "registerServiceWorker",
    "url",
    "scope",
    "unregistered",
    "unregister",
    "removeUpdateFoundListener",
    "register",
    "registration",
    "installing",
    "waiting",
    "active",
    "getServiceWorkerUpdate",
    "shouldBecomeNavigatorController",
    "controller",
    "navigatorWillReload",
    "autoReloadEnabled",
    "listenServiceWorkerUpdate",
    "checkServiceWorkerUpdate",
    "update",
    "updateRegistration",
    "sendMessageToServiceWorkerUpdate",
    "undefined",
    "activateServiceWorkerUpdate",
    "params",
    "Error",
    "sendSkipWaitingToWorker",
    "onActivating",
    "onActivated",
    "onBecomesNavigatorController",
    "waitUntilActivated",
    "removeStateChangeListener",
    "action",
    "removeControllerChangeListener",
    "reload",
    "refreshing",
    "initAddToHomeScreen",
    "app",
    "buttonAddToHomescreen",
    "createElement",
    "disabled",
    "innerHTML",
    "appendChild",
    "onclick",
    "serviceWorkerUrl",
    "initServiceWorker",
    "callLater",
    "requestIdleCallback",
    "requestAnimationFrame",
    "installServiceWorkerUpdateUI",
    "buttonCheckUpdate",
    "paragraph",
    "found",
    "querySelector",
    "initPwa",
    "greet",
    "render",
    "logoUrl"
  ],
  "mappings": ";;;;;MAAO,MAAMA,WAAW,GAAG,CAACC,sBAAD,EAAyBC,KAAzB,EAAgCC,QAAhC,KAA6C;MACtEF,EAAAA,sBAAsB,CAACG,gBAAvB,CAAwCF,KAAxC,EAA+CC,QAA/C;MACA,SAAO,MAAM;MACXF,IAAAA,sBAAsB,CAACI,mBAAvB,CAA2CH,KAA3C,EAAkDC,QAAlD;MACD,GAFD;MAGD,CALM;;MCAP;MACA;MACA;MACA;MACA;MACA;MACA;MAEO,MAAMG,kBAAkB,GAAIH,QAAD,IAAc;MAC9CI,EAAAA,MAAM,CAACH,gBAAP,CAAwB,cAAxB,EAAwCD,QAAxC;MACA,SAAO,MAAM;MACXI,IAAAA,MAAM,CAACF,mBAAP,CAA2B,cAA3B,EAA2CF,QAA3C;MACD,GAFD;MAGD,CALM;MAQP;MACA;;MCjBA;MACA;MACA;MACA;MAEO,MAAMK,qBAAqB,GAAG;MACnCC,EAAAA,GAAG,EAAE,MAAMF,MAAM,CAACG,SAAP,CAAiBC,UAAjB,IAA+BJ,MAAM,CAACK,UAAP,CAAkB,4BAAlB,EAAgDC,OADvD;MAEnCC,EAAAA,MAAM,EAAGX,QAAD,IAAc;MACpB,UAAMY,KAAK,GAAGR,MAAM,CAACK,UAAP,CAAkB,4BAAlB,CAAd;MACAG,IAAAA,KAAK,CAACC,WAAN,CAAkBb,QAAlB;MACA,WAAO,MAAM;MACXY,MAAAA,KAAK,CAACE,cAAN,CAAqBd,QAArB;MACD,KAFD;MAGD;MARkC,CAA9B;;MCLP;MACA;AACA;MACA;MACA;MACA;AACA;MACA;MACA;MACA;MACA;AACA;MACA;MACA;MACA;AACA;MACA;MACA;MACA;MACA;AACA;MACA;MACA;MACA;;MA6DO,SAASe,QAAT,CAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqC;MAC3C,MAAIA,MAAJ,EAAY;MACX,WAAOD,IAAI,GAAGA,IAAI,CAACD,KAAD,CAAP,GAAiBA,KAA5B;MACA;;MACD,MAAI,CAACA,KAAD,IAAU,CAACA,KAAK,CAACC,IAArB,EAA2B;MAC1BD,IAAAA,KAAK,GAAGG,OAAO,CAACC,OAAR,CAAgBJ,KAAhB,CAAR;MACA;;MACD,SAAOC,IAAI,GAAGD,KAAK,CAACC,IAAN,CAAWA,IAAX,CAAH,GAAsBD,KAAjC;MACA;;MA/DD,IAAIK,iBAAiB,GAAG,KAAxB;;MAyCO,kBAAgBC,CAAhB,EAAmB;MACzB,SAAO,YAAW;MACjB,SAAK,IAAIC,IAAI,GAAG,EAAX,EAAeC,CAAC,GAAG,CAAxB,EAA2BA,CAAC,GAAGC,SAAS,CAACC,MAAzC,EAAiDF,CAAC,EAAlD,EAAsD;MACrDD,MAAAA,IAAI,CAACC,CAAD,CAAJ,GAAUC,SAAS,CAACD,CAAD,CAAnB;MACA;;MACD,QAAI;MACH,aAAOL,OAAO,CAACC,OAAR,CAAgBE,CAAC,CAACK,KAAF,CAAQ,IAAR,EAAcJ,IAAd,CAAhB,CAAP;MACA,KAFD,CAEE,OAAMK,CAAN,EAAS;MACV,aAAOT,OAAO,CAACU,MAAR,CAAeD,CAAf,CAAP;MACA;MACD,GATD;MAUA;;MAlDDzB,kBAAkB,CAAC,MAAM;MACvB;MACA;MACA;MACA;MACAkB,EAAAA,iBAAiB,GAAG,IAApB;MACD,CANiB,CAAlB;MAQO,MAAMS,eAAe,GAAG;MAC7BC,EAAAA,WAAW,EAAE,MAAM;MACjB,QAAI,CAAC3B,MAAM,CAAC4B,wBAAZ,EAAsC;MACpC,aAAO,KAAP;MACD;;MAED,QAAI3B,qBAAqB,CAACC,GAAtB,EAAJ,EAAiC;MAC/B,aAAO,KAAP;MACD;;MAED,QAAIe,iBAAJ,EAAuB;MACrB,aAAO,KAAP;MACD;;MAED,WAAO,IAAP;MACD,GAf4B;MAiB7BY,EAAAA,wBAAwB,EAAGjC,QAAD,IAAc;MACtC,QAAIkC,iBAAiB,GAAGJ,eAAe,CAACC,WAAhB,EAAxB;;MAEA,UAAMI,uBAAuB,GAAG,MAAM;MACpC,YAAMC,SAAS,GAAGN,eAAe,CAACC,WAAhB,EAAlB;;MACA,UAAIK,SAAS,KAAKF,iBAAlB,EAAqC;MACnCA,QAAAA,iBAAiB,GAAGE,SAApB;MACApC,QAAAA,QAAQ,CAACoC,SAAD,CAAR;MACD;MACF,KAND;;MAQA,UAAMC,iCAAiC,GAAGC,yBAAyB,CAChEN,wBAAD,IAA8B;MAC5B5B,MAAAA,MAAM,CAAC4B,wBAAP,GAAkCA,wBAAlC;MACAG,MAAAA,uBAAuB;MACxB,KAJgE,CAAnE;MAOA,UAAMI,yBAAyB,GAAGlC,qBAAqB,CAACM,MAAtB,CAA6B,MAAM;MACnEwB,MAAAA,uBAAuB;MACxB,KAFiC,CAAlC;MAIA,UAAMK,0BAA0B,GAAGrC,kBAAkB,CAAC,MAAM;MAC1D;MACA;MACA;MACA;MACAkB,MAAAA,iBAAiB,GAAG,IAApB;MACAc,MAAAA,uBAAuB;MACxB,KAPoD,CAArD;MASA,WAAO,MAAM;MACXE,MAAAA,iCAAiC;MACjCE,MAAAA,yBAAyB;MACzBC,MAAAA,0BAA0B;MAC3B,KAJD;MAKD,GArD4B;MAuD7BC,EAAAA,MAAM,uBAAc;MAClB,QAAI,CAACrC,MAAM,CAAC4B,wBAAZ,EAAsC;MACpCU,MAAAA,OAAO,CAACC,IAAR;MACA,aAAO,KAAP;MACD;;MAEDvC,IAAAA,MAAM,CAAC4B,wBAAP,CAAgCS,MAAhC;MANkB,oBAOSrC,MAAM,CAAC4B,wBAAP,CAAgCY,UAPzC,YAOZC,YAPY;MAAA,aAQdA,YAAY,CAACC,OAAb,KAAyB,UARX,GAST,IATS,GAWX,KAXW;MAAA;MAYnB,GAZK;MAvDuB,CAAxB;;MAsEP,MAAMR,yBAAyB,GAAItC,QAAD,IAAcH,WAAW,CAACO,MAAD,EAAS,qBAAT,EAAgCJ,QAAhC,CAA3D;;MC7GO,MAAM+C,YAAY,GAAG,MAAM;MAChC,MAAIC,SAAS,GAAG,EAAhB;;MAEA,QAAMrC,MAAM,GAAG,SAATA,MAAS,CAACX,QAAD,EAAqC;MAAA,mFAAP,EAAO;MAAA,yBAAxBiD,IAAwB;MAAA,QAAxBA,IAAwB,0BAAjB,KAAiB;;MAClD,QAAIA,IAAJ,EAAU;MACR,YAAMC,gBAAgB,GAAGlD,QAAzB;;MACAA,MAAAA,QAAQ,GAAG,oBAAa;MACtBmD,QAAAA,aAAa;MACbD,QAAAA,gBAAgB,CAAC,YAAD,CAAhB;MACD,OAHD;MAID;;MAEDF,IAAAA,SAAS,GAAG,CAAC,GAAGA,SAAJ,EAAehD,QAAf,CAAZ;MAEA,QAAIoD,OAAO,GAAG,KAAd;;MACA,UAAMD,aAAa,GAAG,MAAM;MAC1B,UAAIC,OAAJ,EAAa;MACbA,MAAAA,OAAO,GAAG,IAAV;MACA,YAAMC,wBAAwB,GAAG,EAAjC;MACA,UAAI7B,CAAC,GAAGwB,SAAS,CAACtB,MAAlB;MACA,UAAI4B,SAAS,GAAG,IAAhB;;MACA,aAAO9B,CAAC,EAAR,EAAY;MACV,cAAM+B,iBAAiB,GAAGP,SAAS,CAACxB,CAAD,CAAnC;;MACA,YAAI8B,SAAJ,EAAe;MACb,cAAIC,iBAAiB,KAAKvD,QAA1B,EAAoC;MAClCsD,YAAAA,SAAS,GAAG,KAAZ;MACD,WAFD,MAEO;MACLD,YAAAA,wBAAwB,CAACG,IAAzB,CAA8BD,iBAA9B;MACD;MACF,SAND,MAMO;MACLF,UAAAA,wBAAwB,CAACG,IAAzB,CAA8BD,iBAA9B;MACD;MACF;;MACDP,MAAAA,SAAS,GAAGK,wBAAZ;MACD,KAnBD;;MAoBA,WAAOF,aAAP;MACD,GAjCD;;MAmCA,QAAMM,IAAI,GAAG,SAAPA,IAAO,GAAa;MAAA,sCAATlC,IAAS;MAATA,MAAAA,IAAS;MAAA;;MACxByB,IAAAA,SAAS,CAACU,OAAV,CAAmBC,QAAD,IAAc;MAC9BA,MAAAA,QAAQ,CAAC,GAAGpC,IAAJ,CAAR;MACD,KAFD;MAGD,GAJD;;MAMA,SAAO;MACLZ,IAAAA,MADK;MAEL8C,IAAAA;MAFK,GAAP;MAID,CAhDM;;MCAP;MACO,MAAMG,uBAAuB,GAAG,CAACC,qBAAD,EAAwBC,OAAxB,KAAoC;MACzE,0BAAyB,IAAIC,cAAJ,EAAzB;MAAA,QAAQC,KAAR,mBAAQA,KAAR;MAAA,QAAeC,KAAf,mBAAeA,KAAf;;MACA,SAAO,IAAI9C,OAAJ,CAAY,CAACC,OAAD,EAAUS,MAAV,KAAqB;MACtCmC,IAAAA,KAAK,CAACE,SAAN,GAAkB,UAAUnE,KAAV,EAAiB;MACjC,UAAIA,KAAK,CAACoE,IAAN,CAAWC,MAAX,KAAsB,UAA1B,EAAsC;MACpCvC,QAAAA,MAAM,CAAC9B,KAAK,CAACoE,IAAN,CAAWnD,KAAZ,CAAN;MACD,OAFD,MAEO;MACLI,QAAAA,OAAO,CAACrB,KAAK,CAACoE,IAAN,CAAWnD,KAAZ,CAAP;MACD;MACF,KAND;;MAOA6C,IAAAA,qBAAqB,CAACQ,WAAtB,CAAkCP,OAAlC,EAA2C,CAACG,KAAD,CAA3C;MACD,GATM,CAAP;MAUD,CAZM;;MCDP;;MAoFO,SAASlD,MAAT,CAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqC;MAC3C,MAAIA,MAAJ,EAAY;MACX,WAAOD,IAAI,GAAGA,IAAI,CAACD,KAAD,CAAP,GAAiBA,KAA5B;MACA;;MACD,MAAI,CAACA,KAAD,IAAU,CAACA,KAAK,CAACC,IAArB,EAA2B;MAC1BD,IAAAA,KAAK,GAAGG,OAAO,CAACC,OAAR,CAAgBJ,KAAhB,CAAR;MACA;;MACD,SAAOC,IAAI,GAAGD,KAAK,CAACC,IAAN,CAAWA,IAAX,CAAH,GAAsBD,KAAjC;MACA;;MAtFD,MAAMsD,gBAAgB,GAAGlE,MAAM,CAACG,SAAP,CAAiBgE,aAA1C;;MAgEO,SAASC,QAAT,CAAgBlD,CAAhB,EAAmB;MACzB,SAAO,YAAW;MACjB,SAAK,IAAIC,IAAI,GAAG,EAAX,EAAeC,CAAC,GAAG,CAAxB,EAA2BA,CAAC,GAAGC,SAAS,CAACC,MAAzC,EAAiDF,CAAC,EAAlD,EAAsD;MACrDD,MAAAA,IAAI,CAACC,CAAD,CAAJ,GAAUC,SAAS,CAACD,CAAD,CAAnB;MACA;;MACD,QAAI;MACH,aAAOL,OAAO,CAACC,OAAR,CAAgBE,CAAC,CAACK,KAAF,CAAQ,IAAR,EAAcJ,IAAd,CAAhB,CAAP;MACA,KAFD,CAEE,OAAMK,CAAN,EAAS;MACV,aAAOT,OAAO,CAACU,MAAR,CAAeD,CAAf,CAAP;MACA;MACD,GATD;MAUA;;MA8bM,SAAS6C,OAAT,CAAeC,IAAf,EAAqBzD,IAArB,EAA2BC,MAA3B,EAAmC;MACzC,MAAIA,MAAJ,EAAY;MACX,WAAOD,IAAI,GAAGA,IAAI,CAACyD,IAAI,EAAL,CAAP,GAAkBA,IAAI,EAAjC;MACA;;MACD,MAAI;MACH,QAAIC,MAAM,GAAGxD,OAAO,CAACC,OAAR,CAAgBsD,IAAI,EAApB,CAAb;MACA,WAAOzD,IAAI,GAAG0D,MAAM,CAAC1D,IAAP,CAAYA,IAAZ,CAAH,GAAuB0D,MAAlC;MACA,GAHD,CAGE,OAAO/C,CAAP,EAAU;MACX,WAAOT,OAAO,CAACU,MAAR,CAAeD,CAAf,CAAP;MACA;MACD;;MAjhBD,MAAMgD,GAAG,GAAG,SAANA,GAAM,GAAa;MAIxB,CAJD;;MAyhBO,iBAAiBF,IAAjB,EAAuBzD,IAAvB,EAA6B;MACnC,MAAI0D,MAAM,GAAGD,IAAI,EAAjB;;MACA,MAAIC,MAAM,IAAIA,MAAM,CAAC1D,IAArB,EAA2B;MAC1B,WAAO0D,MAAM,CAAC1D,IAAP,CAAYA,IAAZ,CAAP;MACA;;MACD,SAAOA,IAAI,CAAC0D,MAAD,CAAX;MACA;MArhBM,MAAME,mBAAmB,GAC9BC,OAAO,CAACR,gBAAD,CAAP,IAA6BS,QAAQ,CAACC,QAAT,CAAkBC,QAAlB,KAA+B,QADvD;;MAIP,IAAIC,mBAAmB,GAAG,IAA1B;;MAMA,IAAIC,qBAAqB,GAAG,IAA5B;MACA,MAAMC,iCAAiC,GAAGrC,YAAY,EAAtD;;MACA,MAAMsC,2BAA2B,GAAIC,MAAD,IAAY;MAC9C,MAAIH,qBAAqB,IAAIA,qBAAqB,KAAKG,MAAvD,EAA+D;MAM7D;MACD;;MACD,MAAIA,MAAJ,EAAY;MACVV,IAAAA,GAAG,qDAA8CU,MAAM,CAACC,KAArD,OAAH;MACD;;MAGDJ,EAAAA,qBAAqB,GAAGG,MAAxB;MACAF,EAAAA,iCAAiC,CAAC3B,IAAlC;MACD,CAhBD;MAoBO,MAAM+B,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,GAAD,EAAyB;MAAA,iFAAP,EAAO;MAAA,MAAjBC,KAAiB,QAAjBA,KAAiB;;MAC5D,MAAI,CAACb,mBAAL,EAA0B;MACxB,WAAO,MAAM,EAAb;MACD;;MAED,MAAIc,YAAY,GAAG,KAAnB;;MACA,MAAIC,UAAU,GAAG,MAAM,EAAvB;;MACA,MAAIC,yBAAyB,GAAG,MAAM,EAAtC;;MAEAX,EAAAA,mBAAmB,GAAGZ,gBAAgB,CAACwB,QAAjB,CAA0BL,GAA1B,EAA+B;MAAEC,IAAAA;MAAF,GAA/B,CAAtB;;MACC,eAAa;MAAA,kBACeR,mBADf,YACNa,YADM;MAEZH,MAAAA,UAAU,GAAG,MAAM;MACjBG,QAAAA,YAAY,CAACH,UAAb;MACD,OAFD;;MAIA,UAAID,YAAJ,EAAkB;MAChBC,QAAAA,UAAU;MACV;MACD;;MAED,YAAQI,UAAR,GAAwCD,YAAxC,CAAQC,UAAR;MAAA,YAAwCD,YAAxC,CAAoBE,OAApB;MAAA,YAAwCF,YAAxC,CAA6BG;MAE7BL,MAAAA,yBAAyB,GAAGhG,WAAW,CAACkG,YAAD,EAAe,aAAf,EAA8B,MAAM;;MAEzE,YAAIA,YAAY,CAACC,UAAb,KAA4BA,UAAhC,EAA4C;MAE1C;MACD;;MACDX,QAAAA,2BAA2B,CAACU,YAAY,CAACC,UAAd,CAA3B;MACD,OAPsC,CAAvC;MAbY;MAqBb,GArBA;;MAuBD,SAAO,MAAM;MACXL,IAAAA,YAAY,GAAG,IAAf;MACAE,IAAAA,yBAAyB;MACzBD,IAAAA,UAAU;MACX,GAJD;MAKD,CAtCM;MA0EA,MAAMO,sBAAsB,GAAG,MAAM;MAC1C,SAAOhB,qBAAqB,GACxB;MACEiB,IAAAA,+BAA+B,EAAEtB,OAAO,CAACR,gBAAgB,CAAC+B,UAAlB,CAD1C;MAEEC,IAAAA,mBAAmB,EAAEC;MAFvB,GADwB,GAKxB,IALJ;MAMD,CAPM;MASA,MAAMC,yBAAyB,GAAIxG,QAAD,IAAc;MACrD,SAAOoF,iCAAiC,CAACzE,MAAlC,CAAyCX,QAAzC,CAAP;MACD,CAFM;MAIA,MAAMyG,wBAAwB,wBAAe;MAClD,MAAI,CAACvB,mBAAL,EAA0B;MACxBxC,IAAAA,OAAO,CAACC,IAAR;MACA,WAAO,KAAP;MACD;;MAJiD,gBAMvBuC,mBANuB,YAM5Ca,YAN4C;MAOlD;MACA;MACA;MACA;MACA;MAXkD,kBAYjBA,YAAY,CAACW,MAAb,EAZiB,YAY5CC,kBAZ4C;MAclD,YAAQX,UAAR,GAAuBW,kBAAvB,CAAQX,UAAR;;MACA,UAAIA,UAAJ,EAAgB;MAEdX,QAAAA,2BAA2B,CAACW,UAAD,CAA3B;MACA,eAAO,IAAP;MACD;;MAED,YAAQC,OAAR,GAAoBU,kBAApB,CAAQV,OAAR;;MACA,UAAIA,OAAJ,EAAa;MAEXZ,QAAAA,2BAA2B,CAACY,OAAD,CAA3B;MACA,eAAO,IAAP;MACD;MAGD,aAAO,KAAP;MA7BkD;MAAA;MA8BnD,CA9BoC,CAA9B;MAgCA,MAAMW,gCAAgC,GAAI9C,OAAD,IAAa;MAC3D,MAAI,CAACqB,qBAAL,EAA4B;MAC1BzC,IAAAA,OAAO,CAACC,IAAR;MACA,WAAOkE,SAAP;MACD;;MACD,SAAOjD,uBAAuB,CAACuB,qBAAD,EAAwBrB,OAAxB,CAA9B;MACD,CANM;MAQA,MAAMgD,2BAA2B,sBAAUC,MAAV,EAAqB;MAC3D,MAAI,CAAC5B,qBAAL,EAA4B;MAC1B,UAAM,IAAI6B,KAAJ,CAAU,sCAAV,CAAN;MACD;;MACD,SAAOC,uBAAuB,CAAC9B,qBAAD,EAAwB4B,MAAxB,CAA9B;MACD,CALuC,CAAjC;;MAOP,MAAME,uBAAuB,sBAC3B3B,MAD2B,EAGxB;MAAA;;MAAA,kFAD4F,EAC5F;MAAA,iCADD4B,YACC;MAAA,MADDA,YACC,mCADc,MAAM,EACpB;MAAA,gCADwBC,WACxB;MAAA,MADwBA,WACxB,kCADsC,MAAM,EAC5C;MAAA,oCADgDC,4BAChD;MAAA,MADgDA,4BAChD,sCAD+E,MAAM,EACrF;;MACH,QAAQ7B,KAAR,GAAkBD,MAAlB,CAAQC,KAAR;;MACA,QAAM8B,kBAAkB,GAAG,MAAM;MAC/B,WAAO,IAAIlG,OAAJ,CAAaC,OAAD,IAAa;MAC9B,YAAMkG,yBAAyB,GAAGzH,WAAW,CAACyF,MAAD,EAAS,aAAT,EAAwB,MAAM;MACzE,YAAIA,MAAM,CAACC,KAAP,KAAiB,YAArB,EAAmC;MAEjC2B,UAAAA,YAAY;MACb;;MACD,YAAI5B,MAAM,CAACC,KAAP,KAAiB,WAArB,EAAkC;MAEhC4B,UAAAA,WAAW;MACXG,UAAAA,yBAAyB;MACzBlG,UAAAA,OAAO;MACR;MACF,OAX4C,CAA7C;MAYD,KAbM,CAAP;MAcD,GAfD,CAFG;MAoBH;MACA;MACA;MACA;;;MAvBG;MAAA,QAwBCmE,KAAK,KAAK,WAAV,IAAyBA,KAAK,KAAK,YAxBpC;MAyBD,UAAIA,KAAK,KAAK,WAAd,EAA2B;MACzBqB,QAAAA,gCAAgC,CAAC;MAAEW,UAAAA,MAAM,EAAE;MAAV,SAAD,CAAhC;MACD;;MA3BA,qBA+BKF,kBA/BL;MAiCD,YAAI/C,gBAAgB,CAAC+B,UAArB,EAAiC;MAC/B,gBAAMmB,8BAA8B,GAAG3H,WAAW,CAChDyE,gBADgD,EAEhD,kBAFgD,EAGhD,MAAM;MACJkD,YAAAA,8BAA8B;MAC9BJ,YAAAA,4BAA4B;MAC5B/B,YAAAA,2BAA2B,CAAC,IAAD,CAA3B;MACA,YAAuBoC,MAAM;MAC9B,WAR+C,CAAlD;MAUD,SAXD,MAWO;MACLpC,UAAAA,2BAA2B,CAAC,IAAD,CAA3B;MACA,UAAuBoC,MAAM;MAC9B;;MA/CA;MAAA;MAAA;MAAA;MAAA;MAoDHL,IAAAA,4BAA4B;MAC5B/B,IAAAA,2BAA2B,CAAC,IAAD,CAA3B;MACA,IAAuBoC,MAAM;MAtD1B;MAuDJ,CA1D4B,CAA7B;;MA4DA,IAAIlB,iBAAiB,GAAG,IAAxB;MAKA,IAAImB,UAAU,GAAG,KAAjB;;MACA,MAAMD,MAAM,GAAG,MAAM;MACnB,MAAIC,UAAJ,EAAgB;MACd;MACD;;MACDA,EAAAA,UAAU,GAAG,IAAb;MACAtH,EAAAA,MAAM,CAAC4E,QAAP,CAAgByC,MAAhB;MACD,CAND;;MAQA,IAAI5C,mBAAJ,EAAyB;MACvB,EAAuChF,WAAW,CAACyE,gBAAD,EAAmB,kBAAnB,EAAuCmD,MAAvC;MAMnD;MAGD;MACA;MAEA;MACA;MACA;;MC/QO,MAAME,mBAAmB,GAAIC,GAAD,IAAS;MAC1C,QAAMC,qBAAqB,GAAG9C,QAAQ,CAAC+C,aAAT,CAAuB,QAAvB,CAA9B;MACAD,EAAAA,qBAAqB,CAACE,QAAtB,GAAiC,CAACjG,eAAe,CAACC,WAAhB,EAAlC;MACA8F,EAAAA,qBAAqB,CAACG,SAAtB,GAAkC,oBAAlC;MACAJ,EAAAA,GAAG,CAACK,WAAJ,CAAgBJ,qBAAhB;;MAEAA,EAAAA,qBAAqB,CAACK,OAAtB,GAAgC,MAAM;MACpCpG,IAAAA,eAAe,CAACW,MAAhB;MACD,GAFD;;MAGAX,EAAAA,eAAe,CAACG,wBAAhB,CAAyC,MAAM;MAC7C4F,IAAAA,qBAAqB,CAACE,QAAtB,GAAiC,CAACjG,eAAe,CAACC,WAAhB,EAAlC;MACD,GAFD;MAGD,CAZM;;MC6gBA,SAAS0C,KAAT,CAAeC,IAAf,EAAqBzD,IAArB,EAA2BC,MAA3B,EAAmC;MACzC,MAAIA,MAAJ,EAAY;MACX,WAAOD,IAAI,GAAGA,IAAI,CAACyD,IAAI,EAAL,CAAP,GAAkBA,IAAI,EAAjC;MACA;;MACD,MAAI;MACH,QAAIC,MAAM,GAAGxD,OAAO,CAACC,OAAR,CAAgBsD,IAAI,EAApB,CAAb;MACA,WAAOzD,IAAI,GAAG0D,MAAM,CAAC1D,IAAP,CAAYA,IAAZ,CAAH,GAAuB0D,MAAlC;MACA,GAHD,CAGE,OAAO/C,CAAP,EAAU;MACX,WAAOT,OAAO,CAACU,MAAR,CAAeD,CAAf,CAAP;MACA;MACD;;MAhhBD,MAAMuG,gBAAgB,GAAG,sEAAzB;;MA6DO,gBAAgB7G,CAAhB,EAAmB;MACzB,SAAO,YAAW;MACjB,SAAK,IAAIC,IAAI,GAAG,EAAX,EAAeC,CAAC,GAAG,CAAxB,EAA2BA,CAAC,GAAGC,SAAS,CAACC,MAAzC,EAAiDF,CAAC,EAAlD,EAAsD;MACrDD,MAAAA,IAAI,CAACC,CAAD,CAAJ,GAAUC,SAAS,CAACD,CAAD,CAAnB;MACA;;MACD,QAAI;MACH,aAAOL,OAAO,CAACC,OAAR,CAAgBE,CAAC,CAACK,KAAF,CAAQ,IAAR,EAAcJ,IAAd,CAAhB,CAAP;MACA,KAFD,CAEE,OAAMK,CAAN,EAAS;MACV,aAAOT,OAAO,CAACU,MAAR,CAAeD,CAAf,CAAP;MACA;MACD,GATD;MAUA;;MA+gBM,kBAAkB;;MApElB,sBAAsB8C,IAAtB,EAA4BxD,MAA5B,EAAoC;MAC1C,SAAO,MAAMwD,IAAN,UAAoBxD,MAApB,CAAP;MACA;;MAnhBM,MAAMkH,iBAAiB,GAAIR,GAAD,IAAS;MACxC,MAAI,CAAC/C,mBAAL,EAA0B;MACxB;MACD,GAHuC;;;MAMxC,QAAMwD,SAAS,GAAGjI,MAAM,CAACkI,mBAAP,IAA8BC,qBAAhD;MACAF,EAAAA,SAAS,CAAC,MAAM;MACd7C,IAAAA,qBAAqB,CAAC2C,gBAAD,CAArB;MACD,GAFQ,CAAT;MAIAK,EAAAA,4BAA4B,CAACZ,GAAD,CAA5B;MACD,CAZM;;MAcP,MAAMY,4BAA4B,GAAIZ,GAAD,IAAS;MAC5C,QAAMa,iBAAiB,GAAG1D,QAAQ,CAAC+C,aAAT,CAAuB,QAAvB,CAA1B;MACAW,EAAAA,iBAAiB,CAACT,SAAlB,GAA8B,cAA9B;MACA,QAAMU,SAAS,GAAG3D,QAAQ,CAAC+C,aAAT,CAAuB,GAAvB,CAAlB;MACAF,EAAAA,GAAG,CAACK,WAAJ,CAAgBQ,iBAAhB;MACAb,EAAAA,GAAG,CAACK,WAAJ,CAAgBS,SAAhB;MAEAD,EAAAA,iBAAiB,CAACP,OAAlB,sBAAwC;MACtCO,IAAAA,iBAAiB,CAACV,QAAlB,GAA6B,IAA7B;MACAW,IAAAA,SAAS,CAACV,SAAV,GAAsB,qBAAtB;MAFsC,iBAGlBvB,wBAHkB,YAGhCkC,KAHgC;MAAA,UAKlCA,KALkC;MAQpCF,QAAAA,iBAAiB,CAACV,QAAlB,GAA6B,KAA7B;MACAW,QAAAA,SAAS,CAACV,SAAV,GAAsB,qBAAtB;MAToC;MAAA;MAWvC,GAXD;MAaAxB,EAAAA,yBAAyB,CAAC,MAAM;MAC9B,UAAMpE,SAAS,GAAG0C,OAAO,CAACqB,sBAAsB,EAAvB,CAAzB;;MACA,QAAI/D,SAAJ,EAAe;MACbsG,MAAAA,SAAS,CAACV,SAAV;MACAU,MAAAA,SAAS,CAACE,aAAV,CAAwB,QAAxB,EAAkCV,OAAlC,sBAAwD;MACtDQ,QAAAA,SAAS,CAACE,aAAV,CAAwB,QAAxB,EAAkCb,QAAlC,GAA6C,IAA7C;MADsD,4BAEhDjB,2BAFgD;MAGvD,OAHD;MAID,KAND,MAMO;MACL4B,MAAAA,SAAS,CAACV,SAAV,GAAsB,EAAtB;MACD;MACF,GAXwB,CAAzB;MAYD,CAhCD;;MCtBO,MAAMa,OAAO,GAAIjB,GAAD,IAAS;MAC9BD,EAAAA,mBAAmB,CAACC,GAAD,CAAnB;MACAQ,EAAAA,iBAAiB,CAACR,GAAD,CAAjB;MACD,CAHM;;MCDA,MAAMkB,KAAK,GAAG,MAAM;MACzB,SAAa,aAAH,CAAV;MACD,CAFM;;MCFP;MACA;MACA;MAKA,MAAMlB,GAAG,GAAG7C,QAAQ,CAAC6D,aAAT,CAAuB,MAAvB,CAAZ;YAEaG,MAAM,qBAAG,MAAM;MAC1B,QAAMC,OAAO,GAAG,6DAAhB;MAEApB,EAAAA,GAAG,CAACI,SAAJ,wBACSgB,OADT,mEAEGF,KAAK,EAFR;MAIAD,EAAAA,OAAO,CAACjB,GAAD,CAAP;MACD;;;;;;;;"
}